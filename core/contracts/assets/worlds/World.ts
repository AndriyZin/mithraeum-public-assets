/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export declare namespace IWorld {
  export type ExtraResourceStruct = {
    resourceName: string;
    value: BigNumberish;
  };

  export type ExtraResourceStructOutput = [string, BigNumber] & {
    resourceName: string;
    value: BigNumber;
  };
}

export interface WorldInterface extends utils.Interface {
  functions: {
    "addContinent(string)": FunctionFragment;
    "addResource(string,string,string)": FunctionFragment;
    "addUnit(string,string,string)": FunctionFragment;
    "addUserSettlement(uint256,address)": FunctionFragment;
    "addWorldAsset(address,bytes32)": FunctionFragment;
    "bannerContract()": FunctionFragment;
    "batchTransferBuildingTokens(address[],address[],address[],uint256[])": FunctionFragment;
    "batchTransferResources(address,string[],uint256[])": FunctionFragment;
    "blessToken()": FunctionFragment;
    "burnProsperity(address,uint256)": FunctionFragment;
    "continentIndex(address)": FunctionFragment;
    "continents(uint256)": FunctionFragment;
    "destroy()": FunctionFragment;
    "gameFinishTime()": FunctionFragment;
    "gameStartTime()": FunctionFragment;
    "getContinentsLength()": FunctionFragment;
    "getUserSettlements(uint256[])": FunctionFragment;
    "getUserTier(address)": FunctionFragment;
    "getUserTierResources(uint8)": FunctionFragment;
    "init(string,address,address,address)": FunctionFragment;
    "mintOccultists(string,address,uint256)": FunctionFragment;
    "mintProsperity(address,uint256)": FunctionFragment;
    "mintResources(string,address,uint256)": FunctionFragment;
    "mintUnits(string,address,uint256)": FunctionFragment;
    "mintWorkers(address,uint256)": FunctionFragment;
    "mostRecentOccultistsSummonTime()": FunctionFragment;
    "positionSettlement(uint64,uint16,uint16)": FunctionFragment;
    "prosperity()": FunctionFragment;
    "registry()": FunctionFragment;
    "resourcesMap(string)": FunctionFragment;
    "setBlessTokenContract(address)": FunctionFragment;
    "setFlagsContract(address)": FunctionFragment;
    "setGameFinishTime(uint256)": FunctionFragment;
    "setGameStartTime(uint256)": FunctionFragment;
    "setProsperityContract(address)": FunctionFragment;
    "setRegistryContract(address)": FunctionFragment;
    "setSettlementPosition(address,uint64,uint16,uint16)": FunctionFragment;
    "setUserTier(address[],uint8[])": FunctionFragment;
    "setWorkersContract(address)": FunctionFragment;
    "settlementPosition(address)": FunctionFragment;
    "settlements(address)": FunctionFragment;
    "summonOccultistsBatch(uint256[],uint256[],uint256[])": FunctionFragment;
    "totalOccultists()": FunctionFragment;
    "transferResources(address,address,string,uint256)": FunctionFragment;
    "unitsMap(string)": FunctionFragment;
    "userSettlements(uint256)": FunctionFragment;
    "userTier(address)": FunctionFragment;
    "workers()": FunctionFragment;
    "worldAssets(address)": FunctionFragment;
    "worldName()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addContinent"
      | "addResource"
      | "addUnit"
      | "addUserSettlement"
      | "addWorldAsset"
      | "bannerContract"
      | "batchTransferBuildingTokens"
      | "batchTransferResources"
      | "blessToken"
      | "burnProsperity"
      | "continentIndex"
      | "continents"
      | "destroy"
      | "gameFinishTime"
      | "gameStartTime"
      | "getContinentsLength"
      | "getUserSettlements"
      | "getUserTier"
      | "getUserTierResources"
      | "init"
      | "mintOccultists"
      | "mintProsperity"
      | "mintResources"
      | "mintUnits"
      | "mintWorkers"
      | "mostRecentOccultistsSummonTime"
      | "positionSettlement"
      | "prosperity"
      | "registry"
      | "resourcesMap"
      | "setBlessTokenContract"
      | "setFlagsContract"
      | "setGameFinishTime"
      | "setGameStartTime"
      | "setProsperityContract"
      | "setRegistryContract"
      | "setSettlementPosition"
      | "setUserTier"
      | "setWorkersContract"
      | "settlementPosition"
      | "settlements"
      | "summonOccultistsBatch"
      | "totalOccultists"
      | "transferResources"
      | "unitsMap"
      | "userSettlements"
      | "userTier"
      | "workers"
      | "worldAssets"
      | "worldName"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addContinent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addResource",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addUnit",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addUserSettlement",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addWorldAsset",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "bannerContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "batchTransferBuildingTokens",
    values: [string[], string[], string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTransferResources",
    values: [string, string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "blessToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "burnProsperity",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "continentIndex",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "continents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "destroy", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "gameFinishTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "gameStartTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getContinentsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getUserSettlements",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(functionFragment: "getUserTier", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getUserTierResources",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "init",
    values: [string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "mintOccultists",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintProsperity",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintResources",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintUnits",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintWorkers",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mostRecentOccultistsSummonTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "positionSettlement",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "prosperity",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "registry", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "resourcesMap",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setBlessTokenContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFlagsContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setGameFinishTime",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setGameStartTime",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProsperityContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setRegistryContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setSettlementPosition",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setUserTier",
    values: [string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setWorkersContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "settlementPosition",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "settlements", values: [string]): string;
  encodeFunctionData(
    functionFragment: "summonOccultistsBatch",
    values: [BigNumberish[], BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "totalOccultists",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferResources",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "unitsMap", values: [string]): string;
  encodeFunctionData(
    functionFragment: "userSettlements",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "userTier", values: [string]): string;
  encodeFunctionData(functionFragment: "workers", values?: undefined): string;
  encodeFunctionData(functionFragment: "worldAssets", values: [string]): string;
  encodeFunctionData(functionFragment: "worldName", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "addContinent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addResource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addUnit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addUserSettlement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addWorldAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bannerContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTransferBuildingTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTransferResources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "blessToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "burnProsperity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "continentIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "continents", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "destroy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "gameFinishTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gameStartTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContinentsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserSettlements",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserTierResources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "init", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mintOccultists",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintProsperity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintResources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mintUnits", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mintWorkers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mostRecentOccultistsSummonTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "positionSettlement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "prosperity", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "resourcesMap",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBlessTokenContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFlagsContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGameFinishTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGameStartTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProsperityContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRegistryContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSettlementPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUserTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setWorkersContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "settlementPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "settlements",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "summonOccultistsBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalOccultists",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferResources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unitsMap", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "userSettlements",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "userTier", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "workers", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "worldAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "worldName", data: BytesLike): Result;

  events: {
    "FinishTimeSet(uint256)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "NewContinent(address,string)": EventFragment;
    "NewGameResource(address,string)": EventFragment;
    "NewRegistryContract(address)": EventFragment;
    "NewUserTier(address,uint8)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "FinishTimeSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewContinent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewGameResource"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewRegistryContract"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewUserTier"): EventFragment;
}

export interface FinishTimeSetEventObject {
  timestamp: BigNumber;
}
export type FinishTimeSetEvent = TypedEvent<
  [BigNumber],
  FinishTimeSetEventObject
>;

export type FinishTimeSetEventFilter = TypedEventFilter<FinishTimeSetEvent>;

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface NewContinentEventObject {
  contractAddress: string;
  name: string;
}
export type NewContinentEvent = TypedEvent<
  [string, string],
  NewContinentEventObject
>;

export type NewContinentEventFilter = TypedEventFilter<NewContinentEvent>;

export interface NewGameResourceEventObject {
  resourceAddress: string;
  resourceName: string;
}
export type NewGameResourceEvent = TypedEvent<
  [string, string],
  NewGameResourceEventObject
>;

export type NewGameResourceEventFilter = TypedEventFilter<NewGameResourceEvent>;

export interface NewRegistryContractEventObject {
  registryContractAddress: string;
}
export type NewRegistryContractEvent = TypedEvent<
  [string],
  NewRegistryContractEventObject
>;

export type NewRegistryContractEventFilter =
  TypedEventFilter<NewRegistryContractEvent>;

export interface NewUserTierEventObject {
  userAddress: string;
  tier: number;
}
export type NewUserTierEvent = TypedEvent<
  [string, number],
  NewUserTierEventObject
>;

export type NewUserTierEventFilter = TypedEventFilter<NewUserTierEvent>;

export interface World extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: WorldInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addContinent(
      _continentName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addResource(
      _resourceName: string,
      _resourceSymbol: string,
      _worldResourceName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addUnit(
      _unitName: string,
      _unitSymbol: string,
      _worldUnitName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addUserSettlement(
      ownerTokenId: BigNumberish,
      adr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addWorldAsset(
      worldAsset: string,
      assetType: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bannerContract(overrides?: CallOverrides): Promise<[string]>;

    batchTransferBuildingTokens(
      buildingAddresses: string[],
      senders: string[],
      recipients: string[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchTransferResources(
      to: string,
      resourcesNames: string[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    blessToken(overrides?: CallOverrides): Promise<[string]>;

    burnProsperity(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    continentIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    continents(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    destroy(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    gameFinishTime(overrides?: CallOverrides): Promise<[BigNumber]>;

    gameStartTime(overrides?: CallOverrides): Promise<[BigNumber]>;

    getContinentsLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    getUserSettlements(
      ownerTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getUserTier(_user: string, overrides?: CallOverrides): Promise<[number]>;

    getUserTierResources(
      tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[IWorld.ExtraResourceStructOutput[]]>;

    init(
      _worldName: string,
      _registryContractAddress: string,
      _flagsAddress: string,
      _blessTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintOccultists(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintProsperity(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintResources(
      _resourceName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintUnits(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mintWorkers(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mostRecentOccultistsSummonTime(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    positionSettlement(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    prosperity(overrides?: CallOverrides): Promise<[string]>;

    registry(overrides?: CallOverrides): Promise<[string]>;

    resourcesMap(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    setBlessTokenContract(
      blessTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFlagsContract(
      _flagsAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setGameFinishTime(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setGameStartTime(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProsperityContract(
      _prosperityAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setRegistryContract(
      _registryContractAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setSettlementPosition(
      _settlementAddress: string,
      _continentId: BigNumberish,
      globalX: BigNumberish,
      globalY: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setUserTier(
      _users: string[],
      _tiers: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setWorkersContract(
      _workersAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settlementPosition(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, number, number] & {
        continent: BigNumber;
        globalX: number;
        globalY: number;
      }
    >;

    settlements(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    summonOccultistsBatch(
      continentIndices: BigNumberish[],
      fromZoneIndex: BigNumberish[],
      toZoneIndex: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    totalOccultists(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferResources(
      from: string,
      to: string,
      resourceName: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unitsMap(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    userSettlements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    userTier(arg0: string, overrides?: CallOverrides): Promise<[number]>;

    workers(overrides?: CallOverrides): Promise<[string]>;

    worldAssets(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    worldName(overrides?: CallOverrides): Promise<[string]>;
  };

  addContinent(
    _continentName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addResource(
    _resourceName: string,
    _resourceSymbol: string,
    _worldResourceName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addUnit(
    _unitName: string,
    _unitSymbol: string,
    _worldUnitName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addUserSettlement(
    ownerTokenId: BigNumberish,
    adr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addWorldAsset(
    worldAsset: string,
    assetType: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bannerContract(overrides?: CallOverrides): Promise<string>;

  batchTransferBuildingTokens(
    buildingAddresses: string[],
    senders: string[],
    recipients: string[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchTransferResources(
    to: string,
    resourcesNames: string[],
    amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  blessToken(overrides?: CallOverrides): Promise<string>;

  burnProsperity(
    _from: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  continentIndex(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  continents(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  destroy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  gameFinishTime(overrides?: CallOverrides): Promise<BigNumber>;

  gameStartTime(overrides?: CallOverrides): Promise<BigNumber>;

  getContinentsLength(overrides?: CallOverrides): Promise<BigNumber>;

  getUserSettlements(
    ownerTokenIds: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<string[]>;

  getUserTier(_user: string, overrides?: CallOverrides): Promise<number>;

  getUserTierResources(
    tier: BigNumberish,
    overrides?: CallOverrides
  ): Promise<IWorld.ExtraResourceStructOutput[]>;

  init(
    _worldName: string,
    _registryContractAddress: string,
    _flagsAddress: string,
    _blessTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintOccultists(
    _unitName: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintProsperity(
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintResources(
    _resourceName: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintUnits(
    _unitName: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mintWorkers(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mostRecentOccultistsSummonTime(overrides?: CallOverrides): Promise<BigNumber>;

  positionSettlement(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  prosperity(overrides?: CallOverrides): Promise<string>;

  registry(overrides?: CallOverrides): Promise<string>;

  resourcesMap(arg0: string, overrides?: CallOverrides): Promise<string>;

  setBlessTokenContract(
    blessTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFlagsContract(
    _flagsAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setGameFinishTime(
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setGameStartTime(
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProsperityContract(
    _prosperityAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setRegistryContract(
    _registryContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setSettlementPosition(
    _settlementAddress: string,
    _continentId: BigNumberish,
    globalX: BigNumberish,
    globalY: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setUserTier(
    _users: string[],
    _tiers: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setWorkersContract(
    _workersAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settlementPosition(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, number, number] & {
      continent: BigNumber;
      globalX: number;
      globalY: number;
    }
  >;

  settlements(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  summonOccultistsBatch(
    continentIndices: BigNumberish[],
    fromZoneIndex: BigNumberish[],
    toZoneIndex: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  totalOccultists(overrides?: CallOverrides): Promise<BigNumber>;

  transferResources(
    from: string,
    to: string,
    resourceName: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unitsMap(arg0: string, overrides?: CallOverrides): Promise<string>;

  userSettlements(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  userTier(arg0: string, overrides?: CallOverrides): Promise<number>;

  workers(overrides?: CallOverrides): Promise<string>;

  worldAssets(arg0: string, overrides?: CallOverrides): Promise<string>;

  worldName(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    addContinent(
      _continentName: string,
      overrides?: CallOverrides
    ): Promise<string>;

    addResource(
      _resourceName: string,
      _resourceSymbol: string,
      _worldResourceName: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addUnit(
      _unitName: string,
      _unitSymbol: string,
      _worldUnitName: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addUserSettlement(
      ownerTokenId: BigNumberish,
      adr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addWorldAsset(
      worldAsset: string,
      assetType: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    bannerContract(overrides?: CallOverrides): Promise<string>;

    batchTransferBuildingTokens(
      buildingAddresses: string[],
      senders: string[],
      recipients: string[],
      amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchTransferResources(
      to: string,
      resourcesNames: string[],
      amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    blessToken(overrides?: CallOverrides): Promise<string>;

    burnProsperity(
      _from: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    continentIndex(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    continents(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    destroy(overrides?: CallOverrides): Promise<void>;

    gameFinishTime(overrides?: CallOverrides): Promise<BigNumber>;

    gameStartTime(overrides?: CallOverrides): Promise<BigNumber>;

    getContinentsLength(overrides?: CallOverrides): Promise<BigNumber>;

    getUserSettlements(
      ownerTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    getUserTier(_user: string, overrides?: CallOverrides): Promise<number>;

    getUserTierResources(
      tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<IWorld.ExtraResourceStructOutput[]>;

    init(
      _worldName: string,
      _registryContractAddress: string,
      _flagsAddress: string,
      _blessTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    mintOccultists(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mintProsperity(
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mintResources(
      _resourceName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mintUnits(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mintWorkers(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mostRecentOccultistsSummonTime(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    positionSettlement(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    prosperity(overrides?: CallOverrides): Promise<string>;

    registry(overrides?: CallOverrides): Promise<string>;

    resourcesMap(arg0: string, overrides?: CallOverrides): Promise<string>;

    setBlessTokenContract(
      blessTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFlagsContract(
      _flagsAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setGameFinishTime(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setGameStartTime(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setProsperityContract(
      _prosperityAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setRegistryContract(
      _registryContractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setSettlementPosition(
      _settlementAddress: string,
      _continentId: BigNumberish,
      globalX: BigNumberish,
      globalY: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setUserTier(
      _users: string[],
      _tiers: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setWorkersContract(
      _workersAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    settlementPosition(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, number, number] & {
        continent: BigNumber;
        globalX: number;
        globalY: number;
      }
    >;

    settlements(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    summonOccultistsBatch(
      continentIndices: BigNumberish[],
      fromZoneIndex: BigNumberish[],
      toZoneIndex: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    totalOccultists(overrides?: CallOverrides): Promise<BigNumber>;

    transferResources(
      from: string,
      to: string,
      resourceName: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    unitsMap(arg0: string, overrides?: CallOverrides): Promise<string>;

    userSettlements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    userTier(arg0: string, overrides?: CallOverrides): Promise<number>;

    workers(overrides?: CallOverrides): Promise<string>;

    worldAssets(arg0: string, overrides?: CallOverrides): Promise<string>;

    worldName(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "FinishTimeSet(uint256)"(timestamp?: null): FinishTimeSetEventFilter;
    FinishTimeSet(timestamp?: null): FinishTimeSetEventFilter;

    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "NewContinent(address,string)"(
      contractAddress?: null,
      name?: null
    ): NewContinentEventFilter;
    NewContinent(contractAddress?: null, name?: null): NewContinentEventFilter;

    "NewGameResource(address,string)"(
      resourceAddress?: null,
      resourceName?: null
    ): NewGameResourceEventFilter;
    NewGameResource(
      resourceAddress?: null,
      resourceName?: null
    ): NewGameResourceEventFilter;

    "NewRegistryContract(address)"(
      registryContractAddress?: null
    ): NewRegistryContractEventFilter;
    NewRegistryContract(
      registryContractAddress?: null
    ): NewRegistryContractEventFilter;

    "NewUserTier(address,uint8)"(
      userAddress?: string | null,
      tier?: null
    ): NewUserTierEventFilter;
    NewUserTier(
      userAddress?: string | null,
      tier?: null
    ): NewUserTierEventFilter;
  };

  estimateGas: {
    addContinent(
      _continentName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addResource(
      _resourceName: string,
      _resourceSymbol: string,
      _worldResourceName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addUnit(
      _unitName: string,
      _unitSymbol: string,
      _worldUnitName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addUserSettlement(
      ownerTokenId: BigNumberish,
      adr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addWorldAsset(
      worldAsset: string,
      assetType: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bannerContract(overrides?: CallOverrides): Promise<BigNumber>;

    batchTransferBuildingTokens(
      buildingAddresses: string[],
      senders: string[],
      recipients: string[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchTransferResources(
      to: string,
      resourcesNames: string[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    blessToken(overrides?: CallOverrides): Promise<BigNumber>;

    burnProsperity(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    continentIndex(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    continents(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    destroy(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    gameFinishTime(overrides?: CallOverrides): Promise<BigNumber>;

    gameStartTime(overrides?: CallOverrides): Promise<BigNumber>;

    getContinentsLength(overrides?: CallOverrides): Promise<BigNumber>;

    getUserSettlements(
      ownerTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserTier(_user: string, overrides?: CallOverrides): Promise<BigNumber>;

    getUserTierResources(
      tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    init(
      _worldName: string,
      _registryContractAddress: string,
      _flagsAddress: string,
      _blessTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintOccultists(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintProsperity(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintResources(
      _resourceName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintUnits(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mintWorkers(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mostRecentOccultistsSummonTime(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    positionSettlement(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    prosperity(overrides?: CallOverrides): Promise<BigNumber>;

    registry(overrides?: CallOverrides): Promise<BigNumber>;

    resourcesMap(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    setBlessTokenContract(
      blessTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFlagsContract(
      _flagsAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setGameFinishTime(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setGameStartTime(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProsperityContract(
      _prosperityAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setRegistryContract(
      _registryContractAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setSettlementPosition(
      _settlementAddress: string,
      _continentId: BigNumberish,
      globalX: BigNumberish,
      globalY: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setUserTier(
      _users: string[],
      _tiers: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setWorkersContract(
      _workersAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settlementPosition(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    settlements(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    summonOccultistsBatch(
      continentIndices: BigNumberish[],
      fromZoneIndex: BigNumberish[],
      toZoneIndex: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    totalOccultists(overrides?: CallOverrides): Promise<BigNumber>;

    transferResources(
      from: string,
      to: string,
      resourceName: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unitsMap(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    userSettlements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    userTier(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    workers(overrides?: CallOverrides): Promise<BigNumber>;

    worldAssets(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    worldName(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addContinent(
      _continentName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addResource(
      _resourceName: string,
      _resourceSymbol: string,
      _worldResourceName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addUnit(
      _unitName: string,
      _unitSymbol: string,
      _worldUnitName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addUserSettlement(
      ownerTokenId: BigNumberish,
      adr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addWorldAsset(
      worldAsset: string,
      assetType: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bannerContract(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    batchTransferBuildingTokens(
      buildingAddresses: string[],
      senders: string[],
      recipients: string[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchTransferResources(
      to: string,
      resourcesNames: string[],
      amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    blessToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    burnProsperity(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    continentIndex(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    continents(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    destroy(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    gameFinishTime(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    gameStartTime(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getContinentsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserSettlements(
      ownerTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserTier(
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserTierResources(
      tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    init(
      _worldName: string,
      _registryContractAddress: string,
      _flagsAddress: string,
      _blessTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintOccultists(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintProsperity(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintResources(
      _resourceName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintUnits(
      _unitName: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mintWorkers(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mostRecentOccultistsSummonTime(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    positionSettlement(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    prosperity(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    resourcesMap(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setBlessTokenContract(
      blessTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFlagsContract(
      _flagsAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setGameFinishTime(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setGameStartTime(
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProsperityContract(
      _prosperityAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setRegistryContract(
      _registryContractAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setSettlementPosition(
      _settlementAddress: string,
      _continentId: BigNumberish,
      globalX: BigNumberish,
      globalY: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setUserTier(
      _users: string[],
      _tiers: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setWorkersContract(
      _workersAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settlementPosition(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    settlements(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    summonOccultistsBatch(
      continentIndices: BigNumberish[],
      fromZoneIndex: BigNumberish[],
      toZoneIndex: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    totalOccultists(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferResources(
      from: string,
      to: string,
      resourceName: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unitsMap(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userSettlements(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    userTier(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    workers(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    worldAssets(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    worldName(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
