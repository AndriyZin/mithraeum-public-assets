/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export interface ZoneInterface extends utils.Interface {
  functions: {
    "amm()": FunctionFragment;
    "assetName()": FunctionFragment;
    "assetType()": FunctionFragment;
    "buyUnitsBatch(address,string[],uint256[],uint256[])": FunctionFragment;
    "coordinatesX(uint256)": FunctionFragment;
    "coordinatesY(uint256)": FunctionFragment;
    "currentContinent()": FunctionFragment;
    "decreaseToxicity(address,string,uint256)": FunctionFragment;
    "getNewSettlementBlessCost()": FunctionFragment;
    "getStats()": FunctionFragment;
    "getTileData(uint256)": FunctionFragment;
    "getTileTypesLength()": FunctionFragment;
    "getTilesData()": FunctionFragment;
    "increaseToxicity(address,string,uint256)": FunctionFragment;
    "init(address,address,uint16[],uint16[],uint16[])": FunctionFragment;
    "isAttached()": FunctionFragment;
    "occultistsSettlement()": FunctionFragment;
    "occultistsSummonTime()": FunctionFragment;
    "onNewSettlement()": FunctionFragment;
    "onZoneAttach(uint256)": FunctionFragment;
    "summonOccultists()": FunctionFragment;
    "tileTypes(uint256)": FunctionFragment;
    "totalSettlements()": FunctionFragment;
    "totalWorkers()": FunctionFragment;
    "toxicity()": FunctionFragment;
    "unitsAmmMap(string)": FunctionFragment;
    "world()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "amm"
      | "assetName"
      | "assetType"
      | "buyUnitsBatch"
      | "coordinatesX"
      | "coordinatesY"
      | "currentContinent"
      | "decreaseToxicity"
      | "getNewSettlementBlessCost"
      | "getStats"
      | "getTileData"
      | "getTileTypesLength"
      | "getTilesData"
      | "increaseToxicity"
      | "init"
      | "isAttached"
      | "occultistsSettlement"
      | "occultistsSummonTime"
      | "onNewSettlement"
      | "onZoneAttach"
      | "summonOccultists"
      | "tileTypes"
      | "totalSettlements"
      | "totalWorkers"
      | "toxicity"
      | "unitsAmmMap"
      | "world"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "amm", values?: undefined): string;
  encodeFunctionData(functionFragment: "assetName", values?: undefined): string;
  encodeFunctionData(functionFragment: "assetType", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "buyUnitsBatch",
    values: [string, string[], BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "coordinatesX",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "coordinatesY",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "currentContinent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseToxicity",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getNewSettlementBlessCost",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getStats", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getTileData",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileTypesLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTilesData",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "increaseToxicity",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "init",
    values: [string, string, BigNumberish[], BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "isAttached",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "occultistsSettlement",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "occultistsSummonTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onNewSettlement",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onZoneAttach",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "summonOccultists",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tileTypes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSettlements",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalWorkers",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "toxicity", values?: undefined): string;
  encodeFunctionData(functionFragment: "unitsAmmMap", values: [string]): string;
  encodeFunctionData(functionFragment: "world", values?: undefined): string;

  decodeFunctionResult(functionFragment: "amm", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "assetName", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "assetType", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "buyUnitsBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "coordinatesX",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "coordinatesY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentContinent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseToxicity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNewSettlementBlessCost",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getStats", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTileData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileTypesLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTilesData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseToxicity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "init", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isAttached", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "occultistsSettlement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "occultistsSummonTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onNewSettlement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onZoneAttach",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "summonOccultists",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tileTypes", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSettlements",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalWorkers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "toxicity", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "unitsAmmMap",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "world", data: BytesLike): Result;

  events: {
    "Initialized(uint8)": EventFragment;
    "NewAmm(address)": EventFragment;
    "ToxicityDecreased(address,uint256)": EventFragment;
    "ToxicityIncreased(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewAmm"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ToxicityDecreased"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ToxicityIncreased"): EventFragment;
}

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface NewAmmEventObject {
  ammAddress: string;
}
export type NewAmmEvent = TypedEvent<[string], NewAmmEventObject>;

export type NewAmmEventFilter = TypedEventFilter<NewAmmEvent>;

export interface ToxicityDecreasedEventObject {
  settlementAddress: string;
  value: BigNumber;
}
export type ToxicityDecreasedEvent = TypedEvent<
  [string, BigNumber],
  ToxicityDecreasedEventObject
>;

export type ToxicityDecreasedEventFilter =
  TypedEventFilter<ToxicityDecreasedEvent>;

export interface ToxicityIncreasedEventObject {
  settlementAddress: string;
  value: BigNumber;
}
export type ToxicityIncreasedEvent = TypedEvent<
  [string, BigNumber],
  ToxicityIncreasedEventObject
>;

export type ToxicityIncreasedEventFilter =
  TypedEventFilter<ToxicityIncreasedEvent>;

export interface Zone extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ZoneInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    amm(overrides?: CallOverrides): Promise<[string]>;

    assetName(overrides?: CallOverrides): Promise<[string]>;

    assetType(overrides?: CallOverrides): Promise<[string]>;

    buyUnitsBatch(
      settlementAddress: string,
      unitNames: string[],
      unitsCount: BigNumberish[],
      maxToolsToSell: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    coordinatesX(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    coordinatesY(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    currentContinent(overrides?: CallOverrides): Promise<[string]>;

    decreaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getNewSettlementBlessCost(overrides?: CallOverrides): Promise<[BigNumber]>;

    getStats(overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;

    getTileData(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number, number, number]>;

    getTileTypesLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    getTilesData(
      overrides?: CallOverrides
    ): Promise<[number[], number[], number[]]>;

    increaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    init(
      _worldAddress: string,
      _continentAddress: string,
      _coordinatesX: BigNumberish[],
      _coordinatesY: BigNumberish[],
      _tileTypes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isAttached(overrides?: CallOverrides): Promise<[boolean]>;

    occultistsSettlement(overrides?: CallOverrides): Promise<[string]>;

    occultistsSummonTime(overrides?: CallOverrides): Promise<[BigNumber]>;

    onNewSettlement(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onZoneAttach(
      occultistsCoordinateIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    summonOccultists(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    tileTypes(arg0: BigNumberish, overrides?: CallOverrides): Promise<[number]>;

    totalSettlements(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalWorkers(overrides?: CallOverrides): Promise<[BigNumber]>;

    toxicity(overrides?: CallOverrides): Promise<[BigNumber]>;

    unitsAmmMap(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    world(overrides?: CallOverrides): Promise<[string]>;
  };

  amm(overrides?: CallOverrides): Promise<string>;

  assetName(overrides?: CallOverrides): Promise<string>;

  assetType(overrides?: CallOverrides): Promise<string>;

  buyUnitsBatch(
    settlementAddress: string,
    unitNames: string[],
    unitsCount: BigNumberish[],
    maxToolsToSell: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  coordinatesX(arg0: BigNumberish, overrides?: CallOverrides): Promise<number>;

  coordinatesY(arg0: BigNumberish, overrides?: CallOverrides): Promise<number>;

  currentContinent(overrides?: CallOverrides): Promise<string>;

  decreaseToxicity(
    settlementAddress: string,
    resourceName: string,
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getNewSettlementBlessCost(overrides?: CallOverrides): Promise<BigNumber>;

  getStats(overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;

  getTileData(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[number, number, number]>;

  getTileTypesLength(overrides?: CallOverrides): Promise<BigNumber>;

  getTilesData(
    overrides?: CallOverrides
  ): Promise<[number[], number[], number[]]>;

  increaseToxicity(
    settlementAddress: string,
    resourceName: string,
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  init(
    _worldAddress: string,
    _continentAddress: string,
    _coordinatesX: BigNumberish[],
    _coordinatesY: BigNumberish[],
    _tileTypes: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isAttached(overrides?: CallOverrides): Promise<boolean>;

  occultistsSettlement(overrides?: CallOverrides): Promise<string>;

  occultistsSummonTime(overrides?: CallOverrides): Promise<BigNumber>;

  onNewSettlement(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onZoneAttach(
    occultistsCoordinateIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  summonOccultists(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  tileTypes(arg0: BigNumberish, overrides?: CallOverrides): Promise<number>;

  totalSettlements(overrides?: CallOverrides): Promise<BigNumber>;

  totalWorkers(overrides?: CallOverrides): Promise<BigNumber>;

  toxicity(overrides?: CallOverrides): Promise<BigNumber>;

  unitsAmmMap(arg0: string, overrides?: CallOverrides): Promise<string>;

  world(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    amm(overrides?: CallOverrides): Promise<string>;

    assetName(overrides?: CallOverrides): Promise<string>;

    assetType(overrides?: CallOverrides): Promise<string>;

    buyUnitsBatch(
      settlementAddress: string,
      unitNames: string[],
      unitsCount: BigNumberish[],
      maxToolsToSell: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    coordinatesX(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    coordinatesY(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    currentContinent(overrides?: CallOverrides): Promise<string>;

    decreaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getNewSettlementBlessCost(overrides?: CallOverrides): Promise<BigNumber>;

    getStats(overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;

    getTileData(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number, number, number]>;

    getTileTypesLength(overrides?: CallOverrides): Promise<BigNumber>;

    getTilesData(
      overrides?: CallOverrides
    ): Promise<[number[], number[], number[]]>;

    increaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    init(
      _worldAddress: string,
      _continentAddress: string,
      _coordinatesX: BigNumberish[],
      _coordinatesY: BigNumberish[],
      _tileTypes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    isAttached(overrides?: CallOverrides): Promise<boolean>;

    occultistsSettlement(overrides?: CallOverrides): Promise<string>;

    occultistsSummonTime(overrides?: CallOverrides): Promise<BigNumber>;

    onNewSettlement(overrides?: CallOverrides): Promise<void>;

    onZoneAttach(
      occultistsCoordinateIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    summonOccultists(overrides?: CallOverrides): Promise<void>;

    tileTypes(arg0: BigNumberish, overrides?: CallOverrides): Promise<number>;

    totalSettlements(overrides?: CallOverrides): Promise<BigNumber>;

    totalWorkers(overrides?: CallOverrides): Promise<BigNumber>;

    toxicity(overrides?: CallOverrides): Promise<BigNumber>;

    unitsAmmMap(arg0: string, overrides?: CallOverrides): Promise<string>;

    world(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "NewAmm(address)"(ammAddress?: null): NewAmmEventFilter;
    NewAmm(ammAddress?: null): NewAmmEventFilter;

    "ToxicityDecreased(address,uint256)"(
      settlementAddress?: null,
      value?: null
    ): ToxicityDecreasedEventFilter;
    ToxicityDecreased(
      settlementAddress?: null,
      value?: null
    ): ToxicityDecreasedEventFilter;

    "ToxicityIncreased(address,uint256)"(
      settlementAddress?: null,
      value?: null
    ): ToxicityIncreasedEventFilter;
    ToxicityIncreased(
      settlementAddress?: null,
      value?: null
    ): ToxicityIncreasedEventFilter;
  };

  estimateGas: {
    amm(overrides?: CallOverrides): Promise<BigNumber>;

    assetName(overrides?: CallOverrides): Promise<BigNumber>;

    assetType(overrides?: CallOverrides): Promise<BigNumber>;

    buyUnitsBatch(
      settlementAddress: string,
      unitNames: string[],
      unitsCount: BigNumberish[],
      maxToolsToSell: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    coordinatesX(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    coordinatesY(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    currentContinent(overrides?: CallOverrides): Promise<BigNumber>;

    decreaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getNewSettlementBlessCost(overrides?: CallOverrides): Promise<BigNumber>;

    getStats(overrides?: CallOverrides): Promise<BigNumber>;

    getTileData(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTileTypesLength(overrides?: CallOverrides): Promise<BigNumber>;

    getTilesData(overrides?: CallOverrides): Promise<BigNumber>;

    increaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    init(
      _worldAddress: string,
      _continentAddress: string,
      _coordinatesX: BigNumberish[],
      _coordinatesY: BigNumberish[],
      _tileTypes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isAttached(overrides?: CallOverrides): Promise<BigNumber>;

    occultistsSettlement(overrides?: CallOverrides): Promise<BigNumber>;

    occultistsSummonTime(overrides?: CallOverrides): Promise<BigNumber>;

    onNewSettlement(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onZoneAttach(
      occultistsCoordinateIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    summonOccultists(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    tileTypes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalSettlements(overrides?: CallOverrides): Promise<BigNumber>;

    totalWorkers(overrides?: CallOverrides): Promise<BigNumber>;

    toxicity(overrides?: CallOverrides): Promise<BigNumber>;

    unitsAmmMap(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    world(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    amm(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetName(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetType(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    buyUnitsBatch(
      settlementAddress: string,
      unitNames: string[],
      unitsCount: BigNumberish[],
      maxToolsToSell: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    coordinatesX(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    coordinatesY(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    currentContinent(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decreaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getNewSettlementBlessCost(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStats(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTileData(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTileTypesLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTilesData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    increaseToxicity(
      settlementAddress: string,
      resourceName: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    init(
      _worldAddress: string,
      _continentAddress: string,
      _coordinatesX: BigNumberish[],
      _coordinatesY: BigNumberish[],
      _tileTypes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isAttached(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    occultistsSettlement(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    occultistsSummonTime(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onNewSettlement(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onZoneAttach(
      occultistsCoordinateIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    summonOccultists(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    tileTypes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSettlements(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalWorkers(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    toxicity(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    unitsAmmMap(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    world(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
