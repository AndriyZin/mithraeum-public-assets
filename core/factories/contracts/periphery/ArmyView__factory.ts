/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ArmyView,
  ArmyViewInterface,
} from "../../../contracts/periphery/ArmyView";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "armyAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getArmyCombinedData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ownerSettlementId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "continent",
                type: "uint64",
              },
              {
                internalType: "uint16",
                name: "globalX",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "globalY",
                type: "uint16",
              },
            ],
            internalType: "struct IWorld.Position",
            name: "currentPosition",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "currentPositionSettlementId",
            type: "address",
          },
          {
            internalType: "address",
            name: "battleId",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "units",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "besiegingUnits",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "onLiquidateArmyUnits",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "robberyTokensCount",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "currentPath",
            type: "uint32[]",
          },
          {
            internalType: "uint64",
            name: "pathStartTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "pathFinishTime",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "destinationPositionSettlementId",
            type: "address",
          },
        ],
        internalType: "struct ArmyView.ArmyCombinedData",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611940806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fc26340214610030575b600080fd5b61004361003e3660046111c7565b610059565b6040516100509190611264565b60405180910390f35b6100e7604080516101c081018252600080825260208083018290528284018290528351606081810186528382529181018390529384019190915290919082019081526000602082018190526040820181905260608083018190526080830181905260a0830181905260c0830182905260e0830152610100820181905261012082018190526101409091015290565b60008390506000816001600160a01b03166344e445456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561012c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015091906113f1565b90506000856001600160a01b03166330b67baa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b691906113f1565b90506000816001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c91906113f1565b6001600160a01b031663027aa9f56040518163ffffffff1660e01b8152600401600060405180830381865afa158015610259573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102819190810190611596565b80516001600160a01b0389168752909150806001600160401b038111156102aa576102aa611415565b6040519080825280602002602001820160405280156102d3578160200160208202803683370190505b5060c0870152806001600160401b038111156102f1576102f1611415565b60405190808252806020026020018201604052801561031a578160200160208202803683370190505b5060e0870152806001600160401b0381111561033857610338611415565b604051908082528060200260200182016040528015610361578160200160208202803683370190505b5061010087015260005b8181101561049e576000838281518110610387576103876115d2565b60200260200101519050846001600160a01b03166337017586826040518263ffffffff1660e01b81526004016103bd91906115e8565b602060405180830381865afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe91906113f1565b6040516370a0823160e01b81526001600160a01b038c8116600483015291909116906370a0823190602401602060405180830381865afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a919061161b565b8860c001518381518110610480576104806115d2565b602090810291909101015250806104968161164a565b91505061036b565b5060006001600160a01b0316856001600160a01b03166344e445456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c91906113f1565b6001600160a01b0316146106e8576000856001600160a01b03166344e445456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e91906113f1565b9050806001600160a01b031663a9ed65156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190611663565b156106e65760405163140f0ae960e21b81526001600160a01b038a81166004830152600091829184169063503c2ba490602401600060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065a91908101906116eb565b9150915060005b848110156106de5781818151811061067b5761067b6115d2565b60200260200101518a60c001518281518110610699576106996115d2565b60200260200101516106ab919061174e565b8a60c0015182815181106106c1576106c16115d2565b6020908102919091010152806106d68161164a565b915050610661565b506000965050505b505b60006001600160a01b0316856001600160a01b0316632de7e9b06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075591906113f1565b6001600160a01b03161461092b576000856001600160a01b0316632de7e9b06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c791906113f1565b6040516308716c6b60e41b81526001600160a01b038b8116600483015291925090821690638716c6b090602401600060405180830381865afa158015610811573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108399190810190611765565b61010088015260405163ef75bf9760e01b81526001600160a01b038a81166004830152602482018a905282169063ef75bf9790604401602060405180830381865afa15801561088c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b0919061161b565b610120880152604051632c3a78bb60e21b81526001600160a01b038a8116600483015282169063b0e9e2ec90602401600060405180830381865afa1580156108fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109249190810190611765565b60e0880152505b6000806000876001600160a01b031663a74bd4f66040518163ffffffff1660e01b81526004016040805180830381865afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099191906117b5565b915091506000886001600160a01b0316631765cab96040518163ffffffff1660e01b8152600401600060405180830381865afa1580156109d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109fd91908101906117e8565b805190915015610c56576000896001600160a01b031663fe7f15ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b91906113f1565b6001600160a01b03166341c525536040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acc91906113f1565b6001600160a01b031663fa3f57676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d91906113f1565b9050600080826001600160a01b031663e1e1e1358560018751610b50919061174e565b81518110610b6057610b606115d2565b60200260200101516040518263ffffffff1660e01b8152600401610b90919063ffffffff91909116815260200190565b6040805180830381865afa158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd0919061189d565b604051636daaeb5160e11b81526000600482015261ffff80841660248301528216604482015291935091506001600160a01b038b169063db55d6a290606401602060405180830381865afa158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5091906113f1565b96505050505b60008060008b6001600160a01b031663d534d6366040518163ffffffff1660e01b8152600401606060405180830381865afa158015610c99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbd91906118c7565b9250925092508b6001600160a01b031663a74bd4f66040518163ffffffff1660e01b81526004016040805180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906117b5565b809650819750505060008c6001600160a01b031663fe7f15ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9091906113f1565b6001600160a01b03166341c525536040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df191906113f1565b6001600160a01b031663d54647936040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5291906113f1565b6001600160a01b03168d6001600160a01b031663fe7f15ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebd91906113f1565b6001600160a01b03161490508015610ed6576000610f99565b8c6001600160a01b031663fe7f15ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3891906113f1565b6001600160a01b031663b5acd4566040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9991906113f1565b8e602001906001600160a01b031690816001600160a01b0316815250508c6001600160a01b031663fe7f15ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ff4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101891906113f1565b8e604001906001600160a01b031690816001600160a01b0316815250506040518060600160405280856001600160401b031681526020018461ffff1681526020018361ffff168152508e606001819052508a6001600160a01b031663db55d6a28585856040518463ffffffff1660e01b81526004016110b9939291906001600160401b0393909316835261ffff918216602084015216604082015260600190565b602060405180830381865afa1580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa91906113f1565b8e608001906001600160a01b031690816001600160a01b031681525050848e6101400181905250868e61016001906001600160401b031690816001600160401b031681525050858e61018001906001600160401b031690816001600160401b031681525050878e6101a001906001600160a01b031690816001600160a01b0316815250508b8e60a001906001600160a01b031690816001600160a01b0316815250505050505050505050505050505092915050565b6001600160a01b03811681146111c457600080fd5b50565b600080604083850312156111da57600080fd5b82356111e5816111af565b946020939093013593505050565b600081518084526020808501945080840160005b8381101561122357815187529582019590820190600101611207565b509495945050505050565b600081518084526020808501945080840160005b8381101561122357815163ffffffff1687529582019590820190600101611242565b6020815261127e6020820183516001600160a01b03169052565b6000602083015161129a60408401826001600160a01b03169052565b5060408301516001600160a01b038116606084015250606083015180516001600160401b03166080840152602081015161ffff90811660a085015260408201511660c08401525060808301516001600160a01b03811660e08401525060a0830151610100611312818501836001600160a01b03169052565b60c0850151915061020061012081818701526113326102208701856111f3565b935060e0870151601f196101408189880301818a015261135287846111f3565b9650858a0151955061016092508189880301838a015261137287876111f3565b9650838a01519550610180935085848a0152808a01519550506101a08189880301818a01526113a1878761122e565b9650828a015195506113bf6101c08a01876001600160401b03169052565b928901516001600160401b03166101e089015250508601516001600160a01b0381168287015291505090949350505050565b60006020828403121561140357600080fd5b815161140e816111af565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561145357611453611415565b604052919050565b60006001600160401b0382111561147457611474611415565b5060051b60200190565b60005b83811015611499578181015183820152602001611481565b838111156114a8576000848401525b50505050565b6000601f83818401126114c057600080fd5b825160206114d56114d08361145b565b61142b565b82815260059290921b850181019181810190878411156114f457600080fd5b8287015b8481101561158a5780516001600160401b03808211156115185760008081fd5b818a0191508a603f83011261152d5760008081fd5b8582015160408282111561154357611543611415565b611554828b01601f1916890161142b565b92508183528c8183860101111561156b5760008081fd5b61157a8289850183870161147e565b50508452509183019183016114f8565b50979650505050505050565b6000602082840312156115a857600080fd5b81516001600160401b038111156115be57600080fd5b6115ca848285016114ae565b949350505050565b634e487b7160e01b600052603260045260246000fd5b602081526000825180602084015261160781604085016020870161147e565b601f01601f19169190910160400192915050565b60006020828403121561162d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161165c5761165c611634565b5060010190565b60006020828403121561167557600080fd5b8151801515811461140e57600080fd5b600082601f83011261169657600080fd5b815160206116a66114d08361145b565b82815260059290921b840181019181810190868411156116c557600080fd5b8286015b848110156116e057805183529183019183016116c9565b509695505050505050565b600080604083850312156116fe57600080fd5b82516001600160401b038082111561171557600080fd5b611721868387016114ae565b9350602085015191508082111561173757600080fd5b5061174485828601611685565b9150509250929050565b60008282101561176057611760611634565b500390565b60006020828403121561177757600080fd5b81516001600160401b0381111561178d57600080fd5b6115ca84828501611685565b80516001600160401b03811681146117b057600080fd5b919050565b600080604083850312156117c857600080fd5b6117d183611799565b91506117df60208401611799565b90509250929050565b600060208083850312156117fb57600080fd5b82516001600160401b0381111561181157600080fd5b8301601f8101851361182257600080fd5b80516118306114d08261145b565b81815260059190911b8201830190838101908783111561184f57600080fd5b928401925b8284101561188057835163ffffffff811681146118715760008081fd5b82529284019290840190611854565b979650505050505050565b805161ffff811681146117b057600080fd5b600080604083850312156118b057600080fd5b6118b98361188b565b91506117df6020840161188b565b6000806000606084860312156118dc57600080fd5b6118e584611799565b92506118f36020850161188b565b91506119016040850161188b565b9050925092509256fea2646970667358221220848c5c1ac78c05df435ef2aa5a192ec19e8c529213d3cd3a268f6f168831274a64736f6c634300080d0033";

type ArmyViewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArmyViewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArmyView__factory extends ContractFactory {
  constructor(...args: ArmyViewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArmyView> {
    return super.deploy(overrides || {}) as Promise<ArmyView>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArmyView {
    return super.attach(address) as ArmyView;
  }
  override connect(signer: Signer): ArmyView__factory {
    return super.connect(signer) as ArmyView__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArmyViewInterface {
    return new utils.Interface(_abi) as ArmyViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArmyView {
    return new Contract(address, _abi, signerOrProvider) as ArmyView;
  }
}
