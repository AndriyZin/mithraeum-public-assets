/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleProxy,
  SimpleProxyInterface,
} from "../../../contracts/periphery/SimpleProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImpl",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b6100b4565b7f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1b80546001600160a01b031981166001600160a01b038481169182179093556040517f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1a939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b610475806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635c60da1b146100b3578063715018a6146100fb5780638da5cb5b14610103578063d784d42614610121578063f2fde38b14610134575b600061008a7f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1a546001600160a01b031690565b905060405136600082376000803683855af43d806000843e8180156100ad578184f35b8184fd5b005b7f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1a546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100b1610147565b600080516020610420833981519152546001600160a01b03166100df565b6100b161012f3660046103ef565b6101ce565b6100b16101423660046103ef565b610285565b33610167600080516020610420833981519152546001600160a01b031690565b6001600160a01b0316146101c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101cc600061036c565b565b336101ee600080516020610420833981519152546001600160a01b031690565b6001600160a01b0316146102445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b9565b7f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1a80546001600160a01b0319166001600160a01b0392909216919091179055565b336102a5600080516020610420833981519152546001600160a01b031690565b6001600160a01b0316146102fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b9565b6001600160a01b0381166103605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b9565b6103698161036c565b50565b60008051602061042083398151915280546001600160a01b031981166001600160a01b038481169182179093556040517f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1a939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60006020828403121561040157600080fd5b81356001600160a01b038116811461041857600080fd5b939250505056fe89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1ba264697066735822122050662a0f1551ceaa42a3f48d52006ba9cd53dd5ffb8f8b959d10ddadd9207bc264736f6c634300080d0033";

type SimpleProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleProxy__factory extends ContractFactory {
  constructor(...args: SimpleProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleProxy> {
    return super.deploy(overrides || {}) as Promise<SimpleProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleProxy {
    return super.attach(address) as SimpleProxy;
  }
  override connect(signer: Signer): SimpleProxy__factory {
    return super.connect(signer) as SimpleProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleProxyInterface {
    return new utils.Interface(_abi) as SimpleProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleProxy {
    return new Contract(address, _abi, signerOrProvider) as SimpleProxy;
  }
}
