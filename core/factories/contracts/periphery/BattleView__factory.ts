/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BattleView,
  BattleViewInterface,
} from "../../../contracts/periphery/BattleView";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "battleAddress",
        type: "address",
      },
    ],
    name: "getBattleCombinedData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "battleCreationDate",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "battleLobbyDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "battleOngoingDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "battleFinishDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "battleSettlementId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "continent",
                type: "uint64",
              },
              {
                internalType: "uint16",
                name: "globalX",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "globalY",
                type: "uint16",
              },
            ],
            internalType: "struct IWorld.Position",
            name: "battleGamePosition",
            type: "tuple",
          },
          {
            internalType: "uint256[]",
            name: "sideACasualties",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "sideBCasualties",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "sideAUnitsCount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "sideBUnitsCount",
            type: "uint256[]",
          },
        ],
        internalType: "struct BattleView.BattleCombinedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "battleAddress",
        type: "address",
      },
    ],
    name: "getBattlePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "continent",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "globalX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "globalY",
            type: "uint16",
          },
        ],
        internalType: "struct IWorld.Position",
        name: "position",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "battleAddress",
        type: "address",
      },
    ],
    name: "getBattleTiming",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "creationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lobbyDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "ongoingDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "finishTime",
            type: "uint64",
          },
        ],
        internalType: "struct IBattle.Timing",
        name: "timing",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "battleAddress",
        type: "address",
      },
    ],
    name: "getSideA",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "battleAddress",
        type: "address",
      },
    ],
    name: "getSideB",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611165806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634a36e5f21461005c5780635232faa1146100bb578063737add4a146100db578063b3335cc2146100fb578063f12f8fb81461010e575b600080fd5b61006f61006a366004610c07565b61012e565b6040516100b2919081516001600160401b039081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b6100ce6100c9366004610c07565b6101ec565b6040516100b29190610c2b565b6100ee6100e9366004610c07565b610352565b6040516100b29190610cb3565b6100ce610109366004610c07565b6109e0565b61012161011c366004610c07565b610b3e565b6040516100b29190610df5565b6040805160808101825260008082526020820181905291810182905260608101919091526000829050600080600080846001600160a01b0316634fba5adf6040518163ffffffff1660e01b8152600401608060405180830381865afa15801561019b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf9190610e4c565b6001600160401b039384168a5291831660208a015282166040890152166060870152509395945050505050565b60606000826001600160a01b031663757c61b26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102529190610ea0565b90506000816001600160401b0381111561026e5761026e610eb9565b604051908082528060200260200182016040528015610297578160200160208202803683370190505b50905060005b8281101561034a5760405163483f6eeb60e01b8152600481018290526001600160a01b0386169063483f6eeb90602401602060405180830381865afa1580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e9190610ecf565b82828151811061032057610320610eec565b6001600160a01b03909216602092830291909101909101528061034281610f02565b91505061029d565b509392505050565b6103c560408051610160810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905284519081018552828152908101829052928301529060c08201908152602001606081526020016060815260200160608152602001606081525090565b60008290506000836001600160a01b03166330b67baa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e9190610ecf565b90506000816001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104949190610ecf565b6001600160a01b031663027aa9f56040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104f99190810190610f89565b80519091506000816001600160401b0381111561051857610518610eb9565b604051908082528060200260200182016040528015610541578160200160208202803683370190505b5090506000826001600160401b0381111561055e5761055e610eb9565b604051908082528060200260200182016040528015610587578160200160208202803683370190505b5090506000836001600160401b038111156105a4576105a4610eb9565b6040519080825280602002602001820160405280156105cd578160200160208202803683370190505b5090506000846001600160401b038111156105ea576105ea610eb9565b604051908082528060200260200182016040528015610613578160200160208202803683370190505b50905060005b8581101561088657600087828151811061063557610635610eec565b60200260200101519050896001600160a01b031663e97dcfdf6001836040518363ffffffff1660e01b815260040161066e92919061109e565b602060405180830381865afa15801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190610ea0565b8483815181106106c1576106c1610eec565b602090810291909101015260405163e97dcfdf60e01b81526001600160a01b038b169063e97dcfdf906106fb90600090859060040161109e565b602060405180830381865afa158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190610ea0565b83838151811061074e5761074e610eec565b602090810291909101015260405163b3c820df60e01b81526001600160a01b038b169063b3c820df9061078890600190859060040161109e565b602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190610ea0565b8683815181106107db576107db610eec565b602090810291909101015260405163b3c820df60e01b81526001600160a01b038b169063b3c820df9061081590600090859060040161109e565b602060405180830381865afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190610ea0565b85838151811061086857610868610eec565b6020908102919091010152508061087e81610f02565b915050610619565b5060006108928b61012e565b9050600061089f8c610b3e565b90506040518061016001604052808d6001600160a01b0316815260200183600001516001600160401b0316815260200183602001516001600160401b0316815260200183604001516001600160401b0316815260200183606001516001600160401b031681526020018a6001600160a01b031663db55d6a28460000151856020015186604001516040518463ffffffff1660e01b8152600401610964939291906001600160401b0393909316835261ffff918216602084015216604082015260600190565b602060405180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190610ecf565b6001600160a01b03168152602001828152602001878152602001868152602001858152602001848152509a5050505050505050505050919050565b60606000826001600160a01b031663ba2fd7d66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a469190610ea0565b90506000816001600160401b03811115610a6257610a62610eb9565b604051908082528060200260200182016040528015610a8b578160200160208202803683370190505b50905060005b8281101561034a57604051634275615b60e01b8152600481018290526001600160a01b03861690634275615b90602401602060405180830381865afa158015610ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b029190610ecf565b828281518110610b1457610b14610eec565b6001600160a01b039092166020928302919091019091015280610b3681610f02565b915050610a91565b604080516060810182526000808252602082018190529181019190915260008290506000806000836001600160a01b03166309218e916040518163ffffffff1660e01b8152600401606060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906110ec565b6001600160401b03909216875261ffff90811660208801521660408601525092949350505050565b6001600160a01b0381168114610c0457600080fd5b50565b600060208284031215610c1957600080fd5b8135610c2481610bef565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c6c5783516001600160a01b031683529284019291840191600101610c47565b50909695505050505050565b600081518084526020808501945080840160005b83811015610ca857815187529582019590820190600101610c8c565b509495945050505050565b60208152610ccd6020820183516001600160a01b03169052565b60006020830151610ce960408401826001600160401b03169052565b5060408301516001600160401b03811660608401525060608301516001600160401b03811660808401525060808301516001600160401b03811660a08401525060a08301516001600160a01b03811660c08401525060c083015180516001600160401b031660e0840152602081015161ffff9081166101008501526040820151166101208401525060e08301516101a06101408181860152610d8f6101c0860184610c78565b9250610100860151601f198087860301610160880152610daf8583610c78565b945061012088015191508087860301610180880152610dce8583610c78565b94508288015192508087860301848801525050610deb8382610c78565b9695505050505050565b60608101610e2a828480516001600160401b0316825260208082015161ffff9081169184019190915260409182015116910152565b92915050565b80516001600160401b0381168114610e4757600080fd5b919050565b60008060008060808587031215610e6257600080fd5b610e6b85610e30565b9350610e7960208601610e30565b9250610e8760408601610e30565b9150610e9560608601610e30565b905092959194509250565b600060208284031215610eb257600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ee157600080fd5b8151610c2481610bef565b634e487b7160e01b600052603260045260246000fd5b600060018201610f2257634e487b7160e01b600052601160045260246000fd5b5060010190565b604051601f8201601f191681016001600160401b0381118282101715610f5157610f51610eb9565b604052919050565b60005b83811015610f74578181015183820152602001610f5c565b83811115610f83576000848401525b50505050565b60006020808385031215610f9c57600080fd5b82516001600160401b0380821115610fb357600080fd5b8185019150601f8681840112610fc857600080fd5b825182811115610fda57610fda610eb9565b8060051b610fe9868201610f29565b918252848101860191868101908a84111561100357600080fd5b87870192505b83831015611090578251868111156110215760008081fd5b8701603f81018c136110335760008081fd5b8881015160408882111561104957611049610eb9565b61105a828901601f19168c01610f29565b8281528e8284860101111561106f5760008081fd5b61107e838d8301848701610f59565b85525050509187019190870190611009565b9a9950505050505050505050565b821515815260406020820152600082518060408401526110c5816060850160208701610f59565b601f01601f1916919091016060019392505050565b805161ffff81168114610e4757600080fd5b60008060006060848603121561110157600080fd5b61110a84610e30565b9250611118602085016110da565b9150611126604085016110da565b9050925092509256fea26469706673582212206ab4494eae5b86689c17606ee2f2a76882952c42d02f6db7492cfa7731436a8864736f6c634300080d0033";

type BattleViewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleViewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleView__factory extends ContractFactory {
  constructor(...args: BattleViewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BattleView> {
    return super.deploy(overrides || {}) as Promise<BattleView>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BattleView {
    return super.attach(address) as BattleView;
  }
  override connect(signer: Signer): BattleView__factory {
    return super.connect(signer) as BattleView__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleViewInterface {
    return new utils.Interface(_abi) as BattleViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattleView {
    return new Contract(address, _abi, signerOrProvider) as BattleView;
  }
}
