/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MithraeumFlags,
  MithraeumFlagsInterface,
} from "../../../contracts/flags/MithraeumFlags";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct MithraeumFlags.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "FlagUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct MithraeumFlags.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "NewFlag",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "flagData",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
    ],
    name: "getFlagData",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct MithraeumFlags.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getFlagDataByUserBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
            ],
            internalType: "struct MithraeumFlags.Part[16]",
            name: "parts",
            type: "tuple[16]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MithraeumFlags.FlagData[]",
        name: "res",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSafeApprovedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct MithraeumFlags.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct MithraeumFlags.Part[16]",
        name: "parts",
        type: "tuple[16]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "updateFlag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600e553480156200001657600080fd5b50604051620035b3380380620035b383398101604081905262000039916200026d565b82518390839062000052906000906020850190620000fa565b50805162000068906001906020840190620000fa565b505050620000856200007f620000a460201b60201c565b620000a8565b80516200009a90600d906020840190620000fa565b505050506200033a565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010890620002fe565b90600052602060002090601f0160209004810192826200012c576000855562000177565b82601f106200014757805160ff191683800117855562000177565b8280016001018555821562000177579182015b82811115620001775782518255916020019190600101906200015a565b506200018592915062000189565b5090565b5b808211156200018557600081556001016200018a565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c857600080fd5b81516001600160401b0380821115620001e557620001e5620001a0565b604051601f8301601f19908116603f01168101908282118183101715620002105762000210620001a0565b816040528381526020925086838588010111156200022d57600080fd5b600091505b8382101562000251578582018301518183018401529082019062000232565b83821115620002635760008385830101525b9695505050505050565b6000806000606084860312156200028357600080fd5b83516001600160401b03808211156200029b57600080fd5b620002a987838801620001b6565b94506020860151915080821115620002c057600080fd5b620002ce87838801620001b6565b93506040860151915080821115620002e557600080fd5b50620002f486828701620001b6565b9150509250925092565b600181811c908216806200031357607f821691505b6020821081036200033457634e487b7160e01b600052602260045260246000fd5b50919050565b613269806200034a6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638da5cb5b11610104578063bc197c81116100a2578063f23a6e6111610071578063f23a6e6114610458578063f2fde38b14610478578063f84ddf0b1461048b578063f9c5b4bc1461049457600080fd5b8063bc197c81146103bb578063c30f4a5a146103f6578063c87b56dd14610409578063e985e9c51461041c57600080fd5b8063a22cb465116100de578063a22cb4651461035f578063af4c0e4414610372578063b64a109714610395578063b88d4fde146103a857600080fd5b80638da5cb5b1461033357806393f430f61461034457806395d89b411461035757600080fd5b80632f91fb691161017c5780636352211e1161014b5780636352211e146102fd5780636c0360eb1461031057806370a0823114610318578063715018a61461032b57600080fd5b80632f91fb6914610294578063358045c4146102b657806342842e0e146102d75780634f6ccce7146102ea57600080fd5b8063095ea7b3116101b8578063095ea7b31461024757806318160ddd1461025c57806323b872dd1461026e5780632f745c591461028157600080fd5b806301ffc9a7146101df57806306fdde0314610207578063081812fc1461021c575b600080fd5b6101f26101ed366004612735565b6104b5565b60405190151581526020015b60405180910390f35b61020f6104d5565b6040516101fe91906127aa565b61022f61022a3660046127bd565b610567565b6040516001600160a01b0390911681526020016101fe565b61025a6102553660046127f2565b610601565b005b6008545b6040519081526020016101fe565b61025a61027c36600461281c565b610716565b61026061028f3660046127f2565b610747565b6102a76102a23660046127bd565b6107dd565b6040516101fe93929190612890565b6102c96102c43660046128d0565b610987565b6040516101fe9291906128eb565b61025a6102e536600461281c565b610c47565b6102606102f83660046127bd565b610c62565b61022f61030b3660046127bd565b610cf5565b61020f610d6c565b6102606103263660046128d0565b610dfa565b61025a610e81565b600a546001600160a01b031661022f565b61025a610352366004612ba9565b610ee7565b61020f611496565b61025a61036d366004612c33565b6114a5565b6101f26103803660046128d0565b600c6020526000908152604090205460ff1681565b61025a6103a3366004612c6f565b6114b4565b61025a6103b6366004612cef565b61156e565b6103dd6103c9366004612d90565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101fe565b61025a610404366004612e4b565b6115a6565b61020f6104173660046127bd565b611613565b6101f261042a366004612e94565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6103dd610466366004612ec7565b63f23a6e6160e01b9695505050505050565b61025a6104863660046128d0565b6116ee565b610260600e5481565b6104a76104a23660046127bd565b6117b9565b6040516101fe929190612f3f565b60006104c0826118e5565b806104cf57506104cf8261190a565b92915050565b6060600080546104e490612f6d565b80601f016020809104026020016040519081016040528092919081815260200182805461051090612f6d565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105e55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061060c82610cf5565b9050806001600160a01b0316836001600160a01b0316036106795760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105dc565b336001600160a01b03821614806106955750610695813361042a565b6107075760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105dc565b610711838361192f565b505050565b610720338261199d565b61073c5760405162461bcd60e51b81526004016105dc90612fa7565b610711838383611a94565b600061075283610dfa565b82106107b45760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016105dc565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60606107e76125b1565b6000838152600b6020526040902080546060919060018201906021830190839061081090612f6d565b80601f016020809104026020016040519081016040528092919081815260200182805461083c90612f6d565b80156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b50506040805161020081019091529396508592506010915060009050835b828210156108e8576040805180820190915260028302850180546001600160a01b0316825260019081015460208084019190915291835290920191016108a7565b5050505091508080546108fa90612f6d565b80601f016020809104026020016040519081016040528092919081815260200182805461092690612f6d565b80156109735780601f1061094857610100808354040283529160200191610973565b820191906000526020600020905b81548152906001019060200180831161095657829003601f168201915b505050505090509250925092509193909250565b606080600061099584610dfa565b90508067ffffffffffffffff8111156109b0576109b0612a37565b6040519080825280602002602001820160405280156109e957816020015b6109d66125eb565b8152602001906001900390816109ce5790505b5091508067ffffffffffffffff811115610a0557610a05612a37565b604051908082528060200260200182016040528015610a2e578160200160208202803683370190505b50925060005b81811015610c40576000610a488683610747565b905080858381518110610a5d57610a5d612ff8565b602002602001018181525050600b6000828152602001908152602001600020604051806060016040529081600082018054610a9790612f6d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac390612f6d565b8015610b105780601f10610ae557610100808354040283529160200191610b10565b820191906000526020600020905b815481529060010190602001808311610af357829003601f168201915b50505091835250506040805161020081019091526020909101906001830160106000835b82821015610b75576040805180820190915260028302850180546001600160a01b031682526001908101546020808401919091529183529092019101610b34565b505050508152602001602182018054610b8d90612f6d565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb990612f6d565b8015610c065780601f10610bdb57610100808354040283529160200191610c06565b820191906000526020600020905b815481529060010190602001808311610be957829003601f168201915b505050505081525050848381518110610c2157610c21612ff8565b6020026020010181905250508080610c3890613024565b915050610a34565b5050915091565b6107118383836040518060200160405280600081525061156e565b6000610c6d60085490565b8210610cd05760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016105dc565b60088281548110610ce357610ce3612ff8565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105dc565b600d8054610d7990612f6d565b80601f0160208091040260200160405190810160405280929190818152602001828054610da590612f6d565b8015610df25780601f10610dc757610100808354040283529160200191610df2565b820191906000526020600020905b815481529060010190602001808311610dd557829003601f168201915b505050505081565b60006001600160a01b038216610e655760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105dc565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610edb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105dc565b610ee56000611c3b565b565b610ef085610cf5565b6001600160a01b0316336001600160a01b031614610f505760405162461bcd60e51b815260206004820152601e60248201527f746f6b656e206973206e6f742062656c6f6e677320746f2063616c6c6572000060448201526064016105dc565b60005b601081101561140f576000868152600b602052604090206001018160108110610f7e57610f7e612ff8565b60020201546001600160a01b0316838260108110610f9e57610f9e612ff8565b6020020151516001600160a01b0316148015610ffc57506000868152600b602052604090206001018160108110610fd757610fd7612ff8565b6002020160010154838260108110610ff157610ff1612ff8565b602002015160200151145b6113fd57600083826010811061101457611014612ff8565b6020020151516001600160a01b03161461119a5782816010811061103a5761103a612ff8565b6020020151516001600160a01b03166342842e0e333086856010811061106257611062612ff8565b6020908102919091015101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156110bd57600080fd5b505af19250505080156110ce575060015b61119a573d8080156110fc576040519150601f19603f3d011682016040523d82523d6000602084013e611101565b606091505b5083826010811061111457611114612ff8565b6020020151516001600160a01b031663f242432a333087866010811061113c5761113c612ff8565b60200201516020015160016040518563ffffffff1660e01b8152600401611166949392919061303d565b600060405180830381600087803b15801561118057600080fd5b505af1158015611194573d6000803e3d6000fd5b50505050505b6000868152600b6020526040812060010182601081106111bc576111bc612ff8565b60020201546001600160a01b031614611389576000868152600b6020526040902060010181601081106111f1576111f1612ff8565b60020201546000878152600b602052604090206001600160a01b03909116906342842e0e9030903390600101856010811061122e5761122e612ff8565b600202016001015460405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b15801561128857600080fd5b505af1925050508015611299575060015b611389573d8080156112c7576040519150601f19603f3d011682016040523d82523d6000602084013e6112cc565b606091505b506000878152600b6020526040902060010182601081106112ef576112ef612ff8565b60020201546000888152600b602052604090206001600160a01b039091169063f242432a9030903390600101866010811061132c5761132c612ff8565b600202016001015460016040518563ffffffff1660e01b8152600401611355949392919061303d565b600060405180830381600087803b15801561136f57600080fd5b505af1158015611383573d6000803e3d6000fd5b50505050505b82816010811061139b5761139b612ff8565b6020020151600b600088815260200190815260200160002060010182601081106113c7576113c7612ff8565b82516002919091029190910180546001600160a01b0319166001600160a01b039092169190911781556020909101516001909101555b8061140781613024565b915050610f53565b506000858152600b60205260409020611429908585612612565b506000858152600b60209081526040909120825161144f92602190920191840190612696565b507f5f855f773963606c13bb170db4996dcdb875341087c085c0dd57be47e4fb6e928585858585604051611487959493929190613080565b60405180910390a15050505050565b6060600180546104e490612f6d565b6114b0338383611c8d565b5050565b600e80549060006114c483613024565b9091555050600e546000908152600b602052604090206114e5908585612612565b50600e546000908152600b60209081526040909120825161150e92602190920191840190612696565b5061151b600e5483611d5b565b61152733600e54611f87565b7faad57453e102f0a57ff14812f213ca7838d614ea6a446bcb89e6239551dcc780600e5485858585604051611560959493929190613080565b60405180910390a150505050565b611578338361199d565b6115945760405162461bcd60e51b81526004016105dc90612fa7565b6115a0848484846120d5565b50505050565b600a546001600160a01b031633146116005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105dc565b80516114b090600d906020840190612696565b6000818152600260205260409020546060906001600160a01b03166116925760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105dc565b600061169c612108565b905060008151116116bc57604051806020016040528060008152506116e7565b806116c684612117565b6040516020016116d79291906130e0565b6040516020818303038152906040525b9392505050565b600a546001600160a01b031633146117485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105dc565b6001600160a01b0381166117ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105dc565b6117b681611c3b565b50565b600b602052600090815260409020805481906117d490612f6d565b80601f016020809104026020016040519081016040528092919081815260200182805461180090612f6d565b801561184d5780601f106118225761010080835404028352916020019161184d565b820191906000526020600020905b81548152906001019060200180831161183057829003601f168201915b50505050509080602101805461186290612f6d565b80601f016020809104026020016040519081016040528092919081815260200182805461188e90612f6d565b80156118db5780601f106118b0576101008083540402835291602001916118db565b820191906000526020600020905b8154815290600101906020018083116118be57829003601f168201915b5050505050905082565b60006001600160e01b0319821663780e9d6360e01b14806104cf57506104cf82612218565b60006001600160e01b03198216630271189760e51b14806104cf57506104cf826118e5565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061196482610cf5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611a165760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105dc565b6000611a2183610cf5565b9050806001600160a01b0316846001600160a01b03161480611a6857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80611a8c5750836001600160a01b0316611a8184610567565b6001600160a01b0316145b949350505050565b826001600160a01b0316611aa782610cf5565b6001600160a01b031614611b0b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105dc565b6001600160a01b038216611b6d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105dc565b611b78838383612268565b611b8360008261192f565b6001600160a01b0383166000908152600360205260408120805460019290611bac90849061310f565b90915550506001600160a01b0382166000908152600360205260408120805460019290611bda908490613126565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603611cee5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105dc565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60005b6010811015610711576000828260108110611d7b57611d7b612ff8565b6020020151516001600160a01b031614611f7557818160108110611da157611da1612ff8565b6020020151516001600160a01b03166342842e0e3330858560108110611dc957611dc9612ff8565b6020908102919091015101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611e2457600080fd5b505af1925050508015611e35575060015b611f01573d808015611e63576040519150601f19603f3d011682016040523d82523d6000602084013e611e68565b606091505b50828260108110611e7b57611e7b612ff8565b6020020151516001600160a01b031663f242432a3330868660108110611ea357611ea3612ff8565b60200201516020015160016040518563ffffffff1660e01b8152600401611ecd949392919061303d565b600060405180830381600087803b158015611ee757600080fd5b505af1158015611efb573d6000803e3d6000fd5b50505050505b818160108110611f1357611f13612ff8565b6020020151600b60008581526020019081526020016000206001018260108110611f3f57611f3f612ff8565b82516002919091029190910180546001600160a01b0319166001600160a01b039092169190911781556020909101516001909101555b80611f7f81613024565b915050611d5e565b6001600160a01b038216611fdd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105dc565b6000818152600260205260409020546001600160a01b0316156120425760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105dc565b61204e60008383612268565b6001600160a01b0382166000908152600360205260408120805460019290612077908490613126565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6120e0848484611a94565b6120ec84848484612320565b6115a05760405162461bcd60e51b81526004016105dc9061313e565b6060600d80546104e490612f6d565b60608160000361213e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612168578061215281613024565b91506121619050600a836131a6565b9150612142565b60008167ffffffffffffffff81111561218357612183612a37565b6040519080825280601f01601f1916602001820160405280156121ad576020820181803683370190505b5090505b8415611a8c576121c260018361310f565b91506121cf600a866131ba565b6121da906030613126565b60f81b8183815181106121ef576121ef612ff8565b60200101906001600160f81b031916908160001a905350612211600a866131a6565b94506121b1565b60006001600160e01b031982166380ac58cd60e01b148061224957506001600160e01b03198216635b5e139f60e01b145b806104cf57506301ffc9a760e01b6001600160e01b03198316146104cf565b6001600160a01b0383166122c3576122be81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6122e6565b816001600160a01b0316836001600160a01b0316146122e6576122e68382612421565b6001600160a01b0382166122fd57610711816124be565b826001600160a01b0316826001600160a01b03161461071157610711828261256d565b60006001600160a01b0384163b1561241657604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906123649033908990889088906004016131ce565b6020604051808303816000875af192505050801561239f575060408051601f3d908101601f1916820190925261239c91810190613200565b60015b6123fc573d8080156123cd576040519150601f19603f3d011682016040523d82523d6000602084013e6123d2565b606091505b5080516000036123f45760405162461bcd60e51b81526004016105dc9061313e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611a8c565b506001949350505050565b6000600161242e84610dfa565b612438919061310f565b60008381526007602052604090205490915080821461248b576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906124d09060019061310f565b600083815260096020526040812054600880549394509092849081106124f8576124f8612ff8565b90600052602060002001549050806008838154811061251957612519612ff8565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806125515761255161321d565b6001900381819060005260206000200160009055905550505050565b600061257883610dfa565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6040518061020001604052806010905b60408051808201909152600080825260208201528152602001906001900390816125c15790505090565b6040518060600160405280606081526020016126056125b1565b8152602001606081525090565b82805461261e90612f6d565b90600052602060002090601f0160209004810192826126405760008555612686565b82601f106126595782800160ff19823516178555612686565b82800160010185558215612686579182015b8281111561268657823582559160200191906001019061266b565b5061269292915061270a565b5090565b8280546126a290612f6d565b90600052602060002090601f0160209004810192826126c45760008555612686565b82601f106126dd57805160ff1916838001178555612686565b82800160010185558215612686579182015b828111156126865782518255916020019190600101906126ef565b5b80821115612692576000815560010161270b565b6001600160e01b0319811681146117b657600080fd5b60006020828403121561274757600080fd5b81356116e78161271f565b60005b8381101561276d578181015183820152602001612755565b838111156115a05750506000910152565b60008151808452612796816020860160208601612752565b601f01601f19169290920160200192915050565b6020815260006116e7602083018461277e565b6000602082840312156127cf57600080fd5b5035919050565b80356001600160a01b03811681146127ed57600080fd5b919050565b6000806040838503121561280557600080fd5b61280e836127d6565b946020939093013593505050565b60008060006060848603121561283157600080fd5b61283a846127d6565b9250612848602085016127d6565b9150604084013590509250925092565b8060005b60108110156115a057815180516001600160a01b03168552602090810151818601526040909401939091019060010161285c565b60006104408083526128a48184018761277e565b90506128b36020840186612858565b8281036104208401526128c6818561277e565b9695505050505050565b6000602082840312156128e257600080fd5b6116e7826127d6565b60408082528351828201819052600091906020906060850190828801855b8281101561292557815184529284019290840190600101612909565b50505084810382860152855180825282820190600581901b8301840188850160005b838110156129de57601f198684030185528151610440815181865261296e8287018261277e565b9150508882015189860160005b60108110156129af57825180516001600160a01b031683526020908101519083015260408201928c0192915060010161297b565b50505090890151848203610420860152906129ca818361277e565b968901969450505090860190600101612947565b50909a9950505050505050505050565b60008083601f840112612a0057600080fd5b50813567ffffffffffffffff811115612a1857600080fd5b602083019150836020828501011115612a3057600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612a7057612a70612a37565b60405290565b600082601f830112612a8757600080fd5b60408051610200810181811067ffffffffffffffff82111715612aac57612aac612a37565b825280610400850186811115612ac157600080fd5b855b81811015612b0757848189031215612adb5760008081fd5b612ae3612a4d565b612aec826127d6565b81526020828101358183015290845292909201918401612ac3565b50919695505050505050565b600067ffffffffffffffff80841115612b2e57612b2e612a37565b604051601f8501601f19908116603f01168101908282118183101715612b5657612b56612a37565b81604052809350858152868686011115612b6f57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612b9a57600080fd5b6116e783833560208501612b13565b60008060008060006104608688031215612bc257600080fd5b85359450602086013567ffffffffffffffff80821115612be157600080fd5b612bed89838a016129ee565b9096509450849150612c028960408a01612a76565b9350610440880135915080821115612c1957600080fd5b50612c2688828901612b89565b9150509295509295909350565b60008060408385031215612c4657600080fd5b612c4f836127d6565b915060208301358015158114612c6457600080fd5b809150509250929050565b6000806000806104408587031215612c8657600080fd5b843567ffffffffffffffff80821115612c9e57600080fd5b612caa888389016129ee565b9096509450849150612cbf8860208901612a76565b9350610420870135915080821115612cd657600080fd5b50612ce387828801612b89565b91505092959194509250565b60008060008060808587031215612d0557600080fd5b612d0e856127d6565b9350612d1c602086016127d6565b925060408501359150606085013567ffffffffffffffff811115612d3f57600080fd5b612ce387828801612b89565b60008083601f840112612d5d57600080fd5b50813567ffffffffffffffff811115612d7557600080fd5b6020830191508360208260051b8501011115612a3057600080fd5b60008060008060008060008060a0898b031215612dac57600080fd5b612db5896127d6565b9750612dc360208a016127d6565b9650604089013567ffffffffffffffff80821115612de057600080fd5b612dec8c838d01612d4b565b909850965060608b0135915080821115612e0557600080fd5b612e118c838d01612d4b565b909650945060808b0135915080821115612e2a57600080fd5b50612e378b828c016129ee565b999c989b5096995094979396929594505050565b600060208284031215612e5d57600080fd5b813567ffffffffffffffff811115612e7457600080fd5b8201601f81018413612e8557600080fd5b611a8c84823560208401612b13565b60008060408385031215612ea757600080fd5b612eb0836127d6565b9150612ebe602084016127d6565b90509250929050565b60008060008060008060a08789031215612ee057600080fd5b612ee9876127d6565b9550612ef7602088016127d6565b94506040870135935060608701359250608087013567ffffffffffffffff811115612f2157600080fd5b612f2d89828a016129ee565b979a9699509497509295939492505050565b604081526000612f52604083018561277e565b8281036020840152612f64818561277e565b95945050505050565b600181811c90821680612f8157607f821691505b602082108103612fa157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016130365761303661300e565b5060010190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260029082015261060f60f31b60c082015260e00190565b60006104608783528060208401528581840152506104808587828501376000838701820152601f8601601f191683016130bc6040850187612858565b81848203016104408501526130d38282018661277e565b9998505050505050505050565b600083516130f2818460208801612752565b835190830190613106818360208801612752565b01949350505050565b6000828210156131215761312161300e565b500390565b600082198211156131395761313961300e565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826131b5576131b5613190565b500490565b6000826131c9576131c9613190565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526128c6608083018461277e565b60006020828403121561321257600080fd5b81516116e78161271f565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b365f158799a5035a75519294cdd26b47ae0b5c8a8e5b7b800d5dd73b608dc8164736f6c634300080d0033";

type MithraeumFlagsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MithraeumFlagsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MithraeumFlags__factory extends ContractFactory {
  constructor(...args: MithraeumFlagsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MithraeumFlags> {
    return super.deploy(
      name_,
      symbol_,
      uri_,
      overrides || {}
    ) as Promise<MithraeumFlags>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, uri_, overrides || {});
  }
  override attach(address: string): MithraeumFlags {
    return super.attach(address) as MithraeumFlags;
  }
  override connect(signer: Signer): MithraeumFlags__factory {
    return super.connect(signer) as MithraeumFlags__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MithraeumFlagsInterface {
    return new utils.Interface(_abi) as MithraeumFlagsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MithraeumFlags {
    return new Contract(address, _abi, signerOrProvider) as MithraeumFlags;
  }
}
