/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IContinent,
  IContinentInterface,
} from "../../../../contracts/assets/continents/IContinent";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "armyAddress",
        type: "address",
      },
    ],
    name: "ArmySpawned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "scriptName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "zoneAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "globalX",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "globalY",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "position",
        type: "uint32",
      },
    ],
    name: "NewSettlement",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "zoneAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "coordinatesX",
        type: "uint16[]",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "coordinatesY",
        type: "uint16[]",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "tileTypes",
        type: "uint16[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "positions",
        type: "uint32[]",
      },
    ],
    name: "NewZone",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "path",
        type: "uint32[]",
      },
    ],
    name: "calculatePath",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalPathTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "continentName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "position",
        type: "uint32",
      },
    ],
    name: "continentTileMap",
    outputs: [
      {
        internalType: "uint32",
        name: "tile0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tile1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tile2",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tile3",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tile4",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tile5",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tile6",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tile7",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "position",
        type: "uint32",
      },
    ],
    name: "getCoordinates",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "x",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "y",
        type: "uint16",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IContinent.TileType",
        name: "",
        type: "uint8",
      },
    ],
    name: "getTileMovingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZoneTemplatesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZonesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_worldAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_continentName",
        type: "string",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "position",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "neighbor",
        type: "uint32",
      },
    ],
    name: "isNeighborTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ownerTokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "globalX",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "globalY",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "assetName",
        type: "string",
      },
    ],
    name: "newAssetSettlement",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "globalX",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "globalY",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "ownerTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxBlessTokensToUse",
        type: "uint256",
      },
    ],
    name: "newSettlement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "x",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "y",
        type: "uint16",
      },
    ],
    name: "settlements",
    outputs: [
      {
        internalType: "contract ISettlement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "zoneTemplates",
    outputs: [
      {
        internalType: "contract IZone",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "zones",
    outputs: [
      {
        internalType: "contract IZone",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IContinent__factory {
  static readonly abi = _abi;
  static createInterface(): IContinentInterface {
    return new utils.Interface(_abi) as IContinentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IContinent {
    return new Contract(address, _abi, signerOrProvider) as IContinent;
  }
}
