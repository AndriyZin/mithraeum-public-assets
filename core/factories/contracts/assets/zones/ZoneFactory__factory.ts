/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZoneFactory,
  ZoneFactoryInterface,
} from "../../../../contracts/assets/zones/ZoneFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "worldAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "assetName",
        type: "string",
      },
      {
        internalType: "address",
        name: "continentAddress",
        type: "address",
      },
      {
        internalType: "uint16[]",
        name: "coordinatesX",
        type: "uint16[]",
      },
      {
        internalType: "uint16[]",
        name: "coordinatesY",
        type: "uint16[]",
      },
      {
        internalType: "uint16[]",
        name: "tileTypes",
        type: "uint16[]",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "worldAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "assetType",
        type: "string",
      },
      {
        internalType: "string",
        name: "assetName",
        type: "string",
      },
    ],
    name: "createAndSet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c3e806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063825c3a1b146200003f578063df31e2351462000072575b600080fd5b620000566200005036600462000436565b62000089565b6040516001600160a01b03909116815260200160405180910390f35b620000566200008336600462000514565b6200012e565b600080620000b588604051806040016040528060048152602001637a6f6e6560e01b815250896200012e565b6040516310215f0960e21b81529091506001600160a01b038216906340857c2490620000ee908b908a908a908a908a90600401620005d2565b600060405180830381600087803b1580156200010957600080fd5b505af11580156200011e573d6000803e3d6000fd5b50929a9950505050505050505050565b600083336001600160a01b0382161480620001b557506040516371776fe760e11b81523360048201526000906001600160a01b0383169063e2eedfce90602401602060405180830381865afa1580156200018c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b2919062000636565b14155b620001f75760405162461bcd60e51b815260206004820152600e60248201526d1bdb9b1e55dbdc9b19105cdcd95d60921b604482015260640160405180910390fd5b60008585856040516200020a90620002af565b6200021893929190620006a0565b604051809103906000f08015801562000235573d6000803e3d6000fd5b50855160208701206040516322f711a760e01b81526001600160a01b03808416600483015260248201929092529192508716906322f711a790604401600060405180830381600087803b1580156200028c57600080fd5b505af1158015620002a1573d6000803e3d6000fd5b509298975050505050505050565b61052680620006e383390190565b80356001600160a01b0381168114620002d557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200031c576200031c620002da565b604052919050565b600082601f8301126200033657600080fd5b813567ffffffffffffffff811115620003535762000353620002da565b62000368601f8201601f1916602001620002f0565b8181528460208386010111156200037e57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112620003ad57600080fd5b8135602067ffffffffffffffff821115620003cc57620003cc620002da565b8160051b620003dd828201620002f0565b9283528481018201928281019087851115620003f857600080fd5b83870192505b848310156200042b57823561ffff811681146200041b5760008081fd5b82529183019190830190620003fe565b979650505050505050565b60008060008060008060c087890312156200045057600080fd5b6200045b87620002bd565b9550602087013567ffffffffffffffff808211156200047957600080fd5b620004878a838b0162000324565b96506200049760408a01620002bd565b95506060890135915080821115620004ae57600080fd5b620004bc8a838b016200039b565b94506080890135915080821115620004d357600080fd5b620004e18a838b016200039b565b935060a0890135915080821115620004f857600080fd5b506200050789828a016200039b565b9150509295509295509295565b6000806000606084860312156200052a57600080fd5b6200053584620002bd565b9250602084013567ffffffffffffffff808211156200055357600080fd5b620005618783880162000324565b935060408601359150808211156200057857600080fd5b50620005878682870162000324565b9150509250925092565b600081518084526020808501945080840160005b83811015620005c757815161ffff1687529582019590820190600101620005a5565b509495945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526200060060a083018662000591565b828103606084015262000614818662000591565b905082810360808401526200062a818562000591565b98975050505050505050565b6000602082840312156200064957600080fd5b5051919050565b6000815180845260005b8181101562000678576020818501810151868301820152016200065a565b818111156200068b576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0384168152606060208201526000620006c4606083018562000650565b8281036040840152620006d8818562000650565b969550505050505056fe608060405234801561001057600080fd5b5060405161052638038061052683398101604081905261002f91610233565b7f6c85b93e587873fbe6712f3b438d42c2945689b262f7bd34b8ea4e3f832a89e680546001600160a01b0319166001600160a01b03851617815560405161007c90849084906020016102b5565b60408051601f198184030181529190528051602091820120600183015583516100ad916002840191908601906100cd565b5081516100c390600383019060208501906100cd565b505050505061031e565b8280546100d9906102e4565b90600052602060002090601f0160209004810192826100fb5760008555610141565b82601f1061011457805160ff1916838001178555610141565b82800160010185558215610141579182015b82811115610141578251825591602001919060010190610126565b5061014d929150610151565b5090565b5b8082111561014d5760008155600101610152565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561019757818101518382015260200161017f565b838111156101a6576000848401525b50505050565b600082601f8301126101bd57600080fd5b81516001600160401b03808211156101d7576101d7610166565b604051601f8301601f19908116603f011681019082821181831017156101ff576101ff610166565b8160405283815286602085880101111561021857600080fd5b61022984602083016020890161017c565b9695505050505050565b60008060006060848603121561024857600080fd5b83516001600160a01b038116811461025f57600080fd5b60208501519093506001600160401b038082111561027c57600080fd5b610288878388016101ac565b9350604086015191508082111561029e57600080fd5b506102ab868287016101ac565b9150509250925092565b600083516102c781846020880161017c565b8351908301906102db81836020880161017c565b01949350505050565b600181811c908216806102f857607f821691505b60208210810361031857634e487b7160e01b600052602260045260246000fd5b50919050565b6101f98061032d6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635c60da1b1461005c575b6000610035610080565b905060405136600082376000803683855af43d806000843e818015610058578184f35b8184fd5b610064610080565b6040516001600160a01b03909116815260200160405180910390f35b7f6c85b93e587873fbe6712f3b438d42c2945689b262f7bd34b8ea4e3f832a89e6805460408051637b10399960e01b81529051600093926001600160a01b031691637b1039999160048083019260209291908290030181865afa1580156100eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010f919061019f565b6001600160a01b031663699324ae82600101546040518263ffffffff1660e01b815260040161014091815260200190565b602060405180830381865afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610181919061019f565b91505090565b6001600160a01b038116811461019c57600080fd5b50565b6000602082840312156101b157600080fd5b81516101bc81610187565b939250505056fea26469706673582212203c9121155a4be60d84d5029fbb41e00bffc0af0f86027bfaf8e3cc8743ec13da64736f6c634300080d0033a26469706673582212201a582cdb02ad45c46610eec8e1ae87362bdfe0d865464dcebeeb065f883a774c64736f6c634300080d0033";

type ZoneFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZoneFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZoneFactory__factory extends ContractFactory {
  constructor(...args: ZoneFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZoneFactory> {
    return super.deploy(overrides || {}) as Promise<ZoneFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZoneFactory {
    return super.attach(address) as ZoneFactory;
  }
  override connect(signer: Signer): ZoneFactory__factory {
    return super.connect(signer) as ZoneFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZoneFactoryInterface {
    return new utils.Interface(_abi) as ZoneFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZoneFactory {
    return new Contract(address, _abi, signerOrProvider) as ZoneFactory;
  }
}
