/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAmm,
  IAmmInterface,
} from "../../../../contracts/assets/amms/IAmm";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "workersBought",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prosperitySpent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentWorkers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentProsperity",
        type: "uint256",
      },
    ],
    name: "WorkersBought",
    type: "event",
  },
  {
    inputs: [],
    name: "applyState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentZone",
    outputs: [
      {
        internalType: "contract IZone",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zoneAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "worldAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "workersAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "prosperityAddress",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastApplyStateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prosperity",
    outputs: [
      {
        internalType: "contract IProsperity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prosperityToSell",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minWorkersReturn",
        type: "uint256",
      },
    ],
    name: "swapExactProsperityForWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "workersToBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProsperityToSell",
        type: "uint256",
      },
    ],
    name: "swapProsperityForExactWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "workers",
    outputs: [
      {
        internalType: "contract IUnit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "workersBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IAmm__factory {
  static readonly abi = _abi;
  static createInterface(): IAmmInterface {
    return new utils.Interface(_abi) as IAmmInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IAmm {
    return new Contract(address, _abi, signerOrProvider) as IAmm;
  }
}
