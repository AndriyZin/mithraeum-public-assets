/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Amm, AmmInterface } from "../../../../contracts/assets/amms/Amm";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "workersBought",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prosperitySpent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentWorkers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentProsperity",
        type: "uint256",
      },
    ],
    name: "WorkersBought",
    type: "event",
  },
  {
    inputs: [],
    name: "applyState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentZone",
    outputs: [
      {
        internalType: "contract IZone",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "workersToBuy",
        type: "uint256",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "prosperityToSell",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prosperityToSell",
        type: "uint256",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256",
        name: "workersToBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "trueProsperityToSell",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zoneAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "worldAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "workersAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "prosperityAddress",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastApplyStateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prosperity",
    outputs: [
      {
        internalType: "contract IProsperity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prosperityToSell",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minWorkersReturn",
        type: "uint256",
      },
    ],
    name: "swapExactProsperityForWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "workersToBuy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProsperityToSell",
        type: "uint256",
      },
    ],
    name: "swapProsperityForExactWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "workers",
    outputs: [
      {
        internalType: "contract IUnit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "workersBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
    ],
    name: "workersGain",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "contract IWorld",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611de1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639b4faa8011610097578063c9230c5d11610066578063c9230c5d146101ff578063cabb62f014610207578063f3ef114e1461021a578063f8deff681461022357600080fd5b80639b4faa801461019e578063a20e0f5a146101b1578063c1153aaa146101c4578063c91b9566146101ec57600080fd5b80633fe3347a116100d35780633fe3347a1461016657806341c525531461017b5780636b33515f1461018e5780637c3257771461019657600080fd5b806306552ff3146100fa57806316e8d7ff1461010f57806330b67baa14610135575b600080fd5b61010d610108366004611a24565b610236565b005b61012261011d366004611a80565b6102fe565b6040519081526020015b60405180910390f35b60005461014e906201000090046001600160a01b031681565b6040516001600160a01b03909116815260200161012c565b61016e6109fa565b60405161012c9190611ad2565b60015461014e906001600160a01b031681565b610122610aae565b61010d610b46565b6101226101ac366004611b05565b610bdd565b6101226101bf366004611a80565b610c7e565b6101d76101d2366004611b05565b6111e5565b6040805192835260208301919091520161012c565b60035461014e906001600160a01b031681565b61016e611322565b60025461014e906001600160a01b031681565b61012260045481565b610122610231366004611b05565b611353565b600061024260016117f1565b9050801561025a576000805461ff0019166101001790555b6102638461187e565b600180546001600160a01b0380881673ffffffffffffffffffffffffffffffffffffffff19928316179092556002805486841690831617905560038054928516929091169190911790554260045580156102f7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190611b1e565b116103c15760405162461bcd60e51b815260206004820152601f60248201527f416d6d3a2050726f737065726974792062616c616e6365206973207a65726f0060448201526064015b60405180910390fd5b670de0b6b3a76400006103d2610aae565b10156103f05760405162461bcd60e51b81526004016103b890611b37565b670de0b6b3a76400008310156104545760405162461bcd60e51b8152602060048201526024808201527f414d4d3a20496e73756666696369656e7420776f726b6572732062757920616d6044820152631bdd5b9d60e21b60648201526084016103b8565b60405163ae41bb9b60e01b81526004810184905273__$b96f6cc754b665f2373f69c32648f7914e$__9063ae41bb9b90602401602060405180830381865af41580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190611b7d565b61052c5760405162461bcd60e51b815260206004820152602f60248201527f414d4d3a20556e77686f6c6520616d6f756e74206f6620776f726b657273207460448201526e1bc8189d5e481cdc1958da599a5959608a1b60648201526084016103b8565b600082116105955760405162461bcd60e51b815260206004820152603060248201527f414d4d3a20496e73756666696369656e74206d6178696d756d2070726f73706560448201526f1c9a5d1e481cd95b1b08185b5bdd5b9d60821b60648201526084016103b8565b336001600160a01b0316639254803a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105d057600080fd5b505af11580156105e4573d6000803e3d6000fd5b5050505060006105f384610bdd565b90508281111561066b5760405162461bcd60e51b815260206004820152603460248201527f414d4d3a2070726f7370657269747920746f2073656c6c206973206d6f72652060448201527f7468616e20737065636966696564206c696d697400000000000000000000000060648201526084016103b8565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d79190611b1e565b10156107255760405162461bcd60e51b815260206004820152601d60248201527f6e6f7420656e6f7567682070726f7370657269747920746f2073656c6c00000060448201526064016103b8565b60035460405163af7d6ca360e01b8152336004820152602481018390526001600160a01b039091169063af7d6ca390604401600060405180830381600087803b15801561077157600080fd5b505af1158015610785573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b8152336004820152602481018890526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af11580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190611b7d565b506002546040516370a0823160e01b8152306004820152670de0b6b3a7640000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561084f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108739190611b1e565b116108c05760405162461bcd60e51b815260206004820152601960248201527f696e73756666696369656e7420776f726b657273206c6566740000000000000060448201526064016103b8565b600254604051630852cd8d60e31b8152670de0b6b3a764000060048201526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561090d57600080fd5b505af1158015610921573d6000803e3d6000fd5b505050507f215b0e98425232ffff2348ebe4d8318088ee90a848527de4a810a36c34562efc338583610951610aae565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bd9190611b1e565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a00160405180910390a1509192915050565b60607f6c85b93e587873fbe6712f3b438d42c2945689b262f7bd34b8ea4e3f832a89e66002018054610a2b90611b9f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5790611b9f565b8015610aa45780601f10610a7957610100808354040283529160200191610aa4565b820191906000526020600020905b815481529060010190602001808311610a8757829003601f168201915b5050505050905090565b60008060045442610abf9190611be9565b9050610aca81611353565b6002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b369190611b1e565b610b409190611c00565b91505090565b6004544203610b5157565b600060045442610b619190611be9565b426004556002549091506001600160a01b03166340c10f1930610b8384611353565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610bc957600080fd5b505af11580156102f7573d6000803e3d6000fd5b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4e9190611b1e565b905082610c59610aae565b610c639190611be9565b610c6d8483611c18565b610c779190611c37565b9392505050565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190611b1e565b11610d3c5760405162461bcd60e51b815260206004820152601f60248201527f416d6d3a2050726f737065726974792062616c616e6365206973207a65726f0060448201526064016103b8565b670de0b6b3a7640000610d4d610aae565b1015610d6b5760405162461bcd60e51b81526004016103b890611b37565b60008311610dcc5760405162461bcd60e51b815260206004820152602860248201527f414d4d3a20496e73756666696369656e742070726f737065726974792073656c6044820152671b08185b5bdd5b9d60c21b60648201526084016103b8565b670de0b6b3a7640000821015610e395760405162461bcd60e51b815260206004820152602c60248201527f414d4d3a20496e73756666696369656e74206d696e696d756d20776f726b657260448201526b1cc8189d5e48185b5bdd5b9d60a21b60648201526084016103b8565b336001600160a01b0316639254803a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e7457600080fd5b505af1158015610e88573d6000803e3d6000fd5b505050506000610e97846111e5565b9450905082811015610f115760405162461bcd60e51b815260206004820152603960248201527f414d4d3a20776f726b65727320746f20627579206973206c657373207468616e60448201527f20737065636966696564206d696e696d616c20616d6f756e740000000000000060648201526084016103b8565b60035460405163af7d6ca360e01b8152336004820152602481018690526001600160a01b039091169063af7d6ca390604401600060405180830381600087803b158015610f5d57600080fd5b505af1158015610f71573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af1158015610fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fea9190611b7d565b506002546040516370a0823160e01b8152306004820152670de0b6b3a7640000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f9190611b1e565b116110ac5760405162461bcd60e51b815260206004820152601960248201527f696e73756666696369656e7420776f726b657273206c6566740000000000000060448201526064016103b8565b600254604051630852cd8d60e31b8152670de0b6b3a764000060048201526001600160a01b03909116906342966c6890602401600060405180830381600087803b1580156110f957600080fd5b505af115801561110d573d6000803e3d6000fd5b505050507f215b0e98425232ffff2348ebe4d8318088ee90a848527de4a810a36c34562efc33828661113d610aae565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a99190611b1e565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a00160405180910390a19392505050565b6003546040516370a0823160e01b8152306004820152600091829182916001600160a01b0316906370a0823190602401602060405180830381865afa158015611232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112569190611b1e565b90506000611262610aae565b905061126e8583611c00565b6112788683611c18565b6112829190611c37565b604051631f6ac11f60e31b81526004810182905290945073__$b96f6cc754b665f2373f69c32648f7914e$__9063fb5608f890602401602060405180830381865af41580156112d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f99190611b1e565b93506113058482611be9565b61130f8584611c18565b6113199190611c37565b92505050915091565b60607f6c85b93e587873fbe6712f3b438d42c2945689b262f7bd34b8ea4e3f832a89e66003018054610a2b90611b9f565b60008160000361136557506000919050565b6001546040805163d546479360e01b815290516000926001600160a01b03169163d54647939160048083019260209291908290030181865afa1580156113af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d39190611c59565b6001600160a01b031663f10e38af6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611410573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114349190611c59565b90506000611440611920565b6001600160a01b031663562d8b206040518163ffffffff1660e01b8152600401600060405180830381865afa15801561147d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114a59190810190611c8c565b6003546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115179190611b1e565b60008054604051631b80bac360e11b81529293509091620100009091046001600160a01b031690633701758690611552908690600401611ad2565b602060405180830381865afa15801561156f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115939190611c59565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a0823190602401602060405180830381865afa1580156115db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ff9190611b1e565b6002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166b9190611b1e565b6116759190611c00565b90508060000361168b5750600095945050505050565b6000816116a084670de0b6b3a7640000611c18565b6116aa9190611c37565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663c59d48476040518163ffffffff1660e01b81526004016040805180830381865afa158015611700573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117249190611d39565b5090506000611731611920565b6001600160a01b031663781e0efe6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561176e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117929190611b1e565b6002620151806117a18661199d565b6117ab9086611c18565b6117ba9064012a05f200611c18565b6117c49190611c37565b6117ce9190611c37565b6117d89190611c18565b90506117e4818a611c18565b9998505050505050505050565b60008054610100900460ff1615611838578160ff1660011480156118145750303b155b6118305760405162461bcd60e51b81526004016103b890611d5d565b506000919050565b60005460ff80841691161061185f5760405162461bcd60e51b81526004016103b890611d5d565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166118e95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103b8565b600080546001600160a01b03909216620100000275ffffffffffffffffffffffffffffffffffffffff000019909216919091179055565b60008060029054906101000a90046001600160a01b03166001600160a01b0316637b1039996040518163ffffffff1660e01b8152600401602060405180830381865afa158015611974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119989190611c59565b905090565b600060038211156119fe57508060006119b7600283611c37565b6119c2906001611c00565b90505b818110156119f8579050806002816119dd8186611c37565b6119e79190611c00565b6119f19190611c37565b90506119c5565b50919050565b811561187957506001919050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060008060808587031215611a3a57600080fd5b8435611a4581611a0c565b93506020850135611a5581611a0c565b92506040850135611a6581611a0c565b91506060850135611a7581611a0c565b939692955090935050565b60008060408385031215611a9357600080fd5b50508035926020909101359150565b60005b83811015611abd578181015183820152602001611aa5565b83811115611acc576000848401525b50505050565b6020815260008251806020840152611af1816040850160208701611aa2565b601f01601f19169190910160400192915050565b600060208284031215611b1757600080fd5b5035919050565b600060208284031215611b3057600080fd5b5051919050565b60208082526026908201527f416d6d3a20576f726b6572732062616c616e6365206973206c657373207468616040820152650dc4062ca62760d31b606082015260800190565b600060208284031215611b8f57600080fd5b81518015158114610c7757600080fd5b600181811c90821680611bb357607f821691505b6020821081036119f857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611bfb57611bfb611bd3565b500390565b60008219821115611c1357611c13611bd3565b500190565b6000816000190483118215151615611c3257611c32611bd3565b500290565b600082611c5457634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611c6b57600080fd5b8151610c7781611a0c565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611c9e57600080fd5b815167ffffffffffffffff80821115611cb657600080fd5b818401915084601f830112611cca57600080fd5b815181811115611cdc57611cdc611c76565b604051601f8201601f19908116603f01168101908382118183101715611d0457611d04611c76565b81604052828152876020848701011115611d1d57600080fd5b611d2e836020830160208801611aa2565b979650505050505050565b60008060408385031215611d4c57600080fd5b505080516020909101519092909150565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220502fb0a09d9533e80eabd4546139d6fc9daa7d2711d25f60546ccc281679f57b64736f6c634300080d0033";

type AmmConstructorParams =
  | [linkLibraryAddresses: AmmLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Amm__factory extends ContractFactory {
  constructor(...args: AmmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Amm__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: AmmLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b96f6cc754b665f2373f69c32648f7914e\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/MathExtension.sol:MathExtension"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Amm> {
    return super.deploy(overrides || {}) as Promise<Amm>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Amm {
    return super.attach(address) as Amm;
  }
  override connect(signer: Signer): Amm__factory {
    return super.connect(signer) as Amm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmmInterface {
    return new utils.Interface(_abi) as AmmInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Amm {
    return new Contract(address, _abi, signerOrProvider) as Amm;
  }
}

export interface AmmLibraryAddresses {
  ["contracts/libraries/MathExtension.sol:MathExtension"]: string;
}
