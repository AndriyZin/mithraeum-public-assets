/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Registry,
  RegistryInterface,
} from "../../../../contracts/assets/worlds/Registry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "copperInUpgradeLvl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "factoryContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseBattleLobbyDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseBattleOngoingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tileType",
        type: "uint256",
      },
    ],
    name: "getBaseTileMovingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuildingTokenTransferThresholdPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuildings",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "unitName",
        type: "string",
      },
    ],
    name: "getDemilitarizationProsperityByUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getGlobalMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxLiquidationCountdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxOccultistsPerZone",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxSettlementPerZone",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getOccultistUnitName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getOccultistsNoDestructionDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getOccultistsPerZoneMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getOccultistsSummonDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRepayPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "resourceName",
        type: "string",
      },
    ],
    name: "getResourceDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "resourceName",
        type: "string",
      },
    ],
    name: "getResourceWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getResources",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRobberyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "resourceName",
        type: "string",
      },
    ],
    name: "getSiegePointsToResourceMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSiegePowerToSiegePointsMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getToReservePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "resourceName",
        type: "string",
      },
    ],
    name: "getToxicityByResource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "unitName",
        type: "string",
      },
    ],
    name: "getUnitAmmMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnitHiringFortificationHpMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "unitName",
        type: "string",
      },
    ],
    name: "getUnitMaxFoodToSpendOnMove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnits",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "buildingName",
        type: "string",
      },
    ],
    name: "getWorkerCapacityCoefficient",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "buildingName",
        type: "string",
      },
    ],
    name: "hasStartingTreasury",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isFactoryContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mightyCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noWoodInUpgradeLvl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "offchainCallerPenalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "scriptContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setFactoryContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "groupName",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setScriptContractName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "unitName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "weaponPowerStage1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armourPowerStage1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weaponPowerStage2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armourPowerStage2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "siegePower",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "siegeMaxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "siegeSupport",
            type: "uint256",
          },
        ],
        internalType: "struct IRegistry.UnitStats",
        name: "_unitStats",
        type: "tuple",
      },
    ],
    name: "setUnitStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "unitsStats",
    outputs: [
      {
        internalType: "uint256",
        name: "weaponPowerStage1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "armourPowerStage1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weaponPowerStage2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "armourPowerStage2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "siegePower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "siegeMaxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "siegeSupport",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611be4806100206000396000f3fe608060405234801561001057600080fd5b50600436106102625760003560e01c8063781e0efe11610156578063c1cc57b0116100d3578063e1c7392a11610097578063fcc77f3b11610071578063fcc77f3b1461058d578063fd7c5c57146105a0578063feb19de1146105b357600080fd5b8063e1c7392a1461056d578063eee4376014610575578063fb04e4d21461057e57600080fd5b8063c1cc57b0146104a4578063cf0c5017146104ac578063d02beb8a1461053a578063d9cf6a2614610542578063dc488ad61461054a57600080fd5b80639d2f5f6f1161011a5780639d2f5f6f14610470578063a018499614610480578063b1ca586314610487578063b1e5d9d11461048e578063b9bc62e61461049657600080fd5b8063781e0efe146104325780637f0c0b7d1461043a578063876cdc771461044d578063908c85ef1461045657806393be0a761461045d57600080fd5b806350b345b5116101e4578063636d6854116101a8578063636d6854146103c057806368e35ca014610331578063699324ae146103e357806375912a171461040c57806377641f071461041f57600080fd5b806350b345b51461033f57806351833acb14610368578063562d8b201461037d5780635b33550a146103a65780635ca32c13146103b957600080fd5b8063253a1eac1161022b578063253a1eac146102c7578063265d3f50146102da578063267a02bf146102ed5780632715305014610300578063355bb5291461033157600080fd5b80623faec114610267578063023da6741461027e578063027aa9f514610293578063051d8db6146102a85780630a4a9b5d146102b6575b600080fd5b610e105b6040519081526020015b60405180910390f35b61029161028c36600461177d565b6105c1565b005b61029b61066d565b6040516102759190611805565b674563918244f4000061026b565b6102916102c4366004611867565b50565b61026b6102d5366004611955565b61075f565b61026b6102e8366004611955565b6108f7565b61026b6102fb366004611955565b610a9d565b600054610319906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610275565b670429d069189e000061026b565b61031961034d366004611992565b6002602052600090815260409020546001600160a01b031681565b61026b610376366004611992565b50610e1090565b60408051808201825260078152662ba0a92924a7a960c91b6020820152905161027591906119ab565b61026b6103b4366004611955565b610be4565b600161026b565b6103d36103ce366004611955565b610d41565b6040519015158152602001610275565b6103196103f1366004611992565b6003602052600090815260409020546001600160a01b031681565b61026b61041a366004611955565b610daa565b61026b61042d366004611955565b610f06565b6103e861026b565b6102916104483660046119be565b611047565b620d2f0061026b565b600361026b565b61026b61046b366004611955565b611103565b69021e19e0c9bab240000061026b565b602861026b565b601761026b565b61546061026b565b6709b6e64a8ec6000061026b565b61029b611213565b6105056104ba366004611955565b80516020818301810180516004808352938301929094019190912092905281546001830154600284015460038501549385015460058601546006909601549395929491939192909187565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610275565b61fd2061026b565b61029b61132a565b6103d3610558366004611867565b60016020526000908152604090205460ff1681565b610291611493565b6212750061026b565b68a2a15d09519be0000061026b565b61029161059b366004611a97565b611525565b61026b6105ae366004611955565b6115de565b6702c68af0bb14000061026b565b6000546201000090046001600160a01b0316331461061a5760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b60448201526064015b60405180910390fd5b600091825260026020908152604080842080546001600160a01b0390941673ffffffffffffffffffffffffffffffffffffffff19909416841790559183526001908190529120805460ff19169091179055565b6040805160038082526080820190925260609160009190816020015b6060815260200190600190039081610689579050509050604051806040016040528060078152602001662ba0a92924a7a960c91b815250816000815181106106d3576106d3611b0b565b60200260200101819052506040518060400160405280600681526020016520a921a422a960d11b8152508160018151811061071057610710611b0b565b6020026020010181905250604051806040016040528060088152602001672427a929a2a6a0a760c11b8152508160028151811061074f5761074f611b0b565b6020908102919091010152919050565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c381016107c05750670de0b6b3a764000092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be81016108135750671bc16d674ec8000092915050565b60408051808201909152600681526521a7a82822a960d11b6020909101527fc3b647802925a0cfb67e4b667c8d862e55dc2261d5b23db7b1b9fc9b27a421a081016108685750673782dace9d90000092915050565b604080518082019091526005815264544f4f4c5360d81b6020909101527f28d7794e0cfbd5d17fae53bfc29ff16210961f4bc1e894dcb9fc4bbcbbf7371581016108bc5750676f05b59d3b20000092915050565b60405162461bcd60e51b815260206004820152601060248201526f756e6b6e6f776e207265736f7572636560801b6044820152606401610611565b80516020808301919091206040805180820190915260048152634641524d60e01b9201919091526000907fea182adbe8a99c0376d68ae8663b1e572fb013df4142853d0efacd6d83e4a3f381016109585750678ac7230489e8000092915050565b60408051808201909152600a8152691315535091549352531360b21b6020909101527f9105c25cd4a4f5de306390a4361214e261c5b47733a14849b60e1afd6befe9a781016109b15750676124fee993bc000092915050565b6040805180820190915260058152644d494e455360d81b6020909101527f27f91e7158e4632bc5c0e510ec772e174c9efaa5a16d7b7d3abc7579bd4af85c8101610a055750674563918244f4000092915050565b60408051808201909152600e81526d574541504f4e5f464143544f525960901b6020909101527fc9b1e304a1f5b1727939c876982d2fc8e1a821b14b9b3f3db0ccd45076651a8d8101610a6257506729a2241af62c000092915050565b60405162461bcd60e51b815260206004820152601060248201526f756e6b6e6f776e206275696c64696e6760801b6044820152606401610611565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b9201919091526000907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f8101610b015750670de0b6b3a764000092915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c08101610b5657506706f05b59d3b2000092915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610bad5750670494654067e1000092915050565b60405162461bcd60e51b815260206004820152600c60248201526b1d5b9adb9bdddb881d5b9a5d60a21b6044820152606401610611565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c38101610c4557506702c68af0bb14000092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be8101610c985750670429d069189e000092915050565b60408051808201909152600681526521a7a82822a960d11b6020909101527fc3b647802925a0cfb67e4b667c8d862e55dc2261d5b23db7b1b9fc9b27a421a08101610ced57506706f05b59d3b2000092915050565b604080518082019091526005815264544f4f4c5360d81b6020909101527f28d7794e0cfbd5d17fae53bfc29ff16210961f4bc1e894dcb9fc4bbcbbf7371581016108bc5750670de0b6b3a764000092915050565b805160208083019190912060408051808201909152600a8152691315535091549352531360b21b9201919091526000907f9105c25cd4a4f5de306390a4361214e261c5b47733a14849b60e1afd6befe9a78101610da15750600192915050565b50600092915050565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c38101610e0b57506707a1fe160277000092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be8101610e5e575067016345785d8a000092915050565b60408051808201909152600681526521a7a82822a960d11b6020909101527fc3b647802925a0cfb67e4b667c8d862e55dc2261d5b23db7b1b9fc9b27a421a08101610eb3575067011c37937e08000092915050565b604080518082019091526005815264544f4f4c5360d81b6020909101527f28d7794e0cfbd5d17fae53bfc29ff16210961f4bc1e894dcb9fc4bbcbbf7371581016108bc575066b1a2bc2ec5000092915050565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c38101610f605750600092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be8101610fac5750600192915050565b60408051808201909152600681526521a7a82822a960d11b6020909101527fc3b647802925a0cfb67e4b667c8d862e55dc2261d5b23db7b1b9fc9b27a421a08101610ffa5750600392915050565b604080518082019091526005815264544f4f4c5360d81b6020909101527f28d7794e0cfbd5d17fae53bfc29ff16210961f4bc1e894dcb9fc4bbcbbf7371581016108bc5750600a92915050565b6000546201000090046001600160a01b0316331461109b5760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b6044820152606401610611565b80600484846040516110ae929190611b21565b9081526040805160209281900383019020835181559183015160018301558201516002820155606082015160038201556080820151600482015560a0820151600582015560c090910151600690910155505050565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b9201919091526000907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f81016111675750674563918244f4000092915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c081016111bc5750676124fee993bc000092915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610bad5750678ac7230489e8000092915050565b60408051600480825260a0820190925260609160009190816020015b606081526020019060019003908161122f579050509050604051806040016040528060048152602001631193d3d160e21b8152508160008151811061127657611276611b0b565b60200260200101819052506040518060400160405280600481526020016315d3d3d160e21b815250816001815181106112b1576112b1611b0b565b60200260200101819052506040518060400160405280600681526020016521a7a82822a960d11b815250816002815181106112ee576112ee611b0b565b602002602001018190525060405180604001604052806005815260200164544f4f4c5360d81b8152508160038151811061074f5761074f611b0b565b60408051600580825260c0820190925260609160009190816020015b6060815260200190600190039081611346579050509050604051806040016040528060048152602001634641524d60e01b8152508160008151811061138d5761138d611b0b565b60200260200101819052506040518060400160405280600a8152602001691315535091549352531360b21b815250816001815181106113ce576113ce611b0b565b6020026020010181905250604051806040016040528060058152602001644d494e455360d81b8152508160028151811061140a5761140a611b0b565b60200260200101819052506040518060400160405280600e81526020016d574541504f4e5f464143544f525960901b8152508160038151811061144f5761144f611b0b565b60200260200101819052506040518060400160405280600d81526020016c2327a92a24a324a1a0aa24a7a760991b8152508160048151811061074f5761074f611b0b565b600061149f60016116d9565b905080156114b7576000805461ff0019166101001790555b6000805475ffffffffffffffffffffffffffffffffffffffff0000191633620100000217905580156102c4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6000546201000090046001600160a01b031633146115795760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b6044820152606401610611565b80600360008585604051602001611591929190611b31565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b9201919091526000907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f810161163b5750600392915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c081016116895750600292915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610bad5750600192915050565b60008054610100900460ff1615611720578160ff1660011480156116fc5750303b155b6117185760405162461bcd60e51b815260040161061190611b60565b506000919050565b60005460ff8084169116106117475760405162461bcd60e51b815260040161061190611b60565b506000805460ff191660ff92909216919091179055600190565b919050565b80356001600160a01b038116811461176157600080fd5b6000806040838503121561179057600080fd5b823591506117a060208401611766565b90509250929050565b60005b838110156117c45781810151838201526020016117ac565b838111156117d3576000848401525b50505050565b600081518084526117f18160208601602086016117a9565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561185a57603f198886030184526118488583516117d9565b9450928501929085019060010161182c565b5092979650505050505050565b60006020828403121561187957600080fd5b61188282611766565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156118c2576118c2611889565b60405290565b600082601f8301126118d957600080fd5b813567ffffffffffffffff808211156118f4576118f4611889565b604051601f8301601f19908116603f0116810190828211818310171561191c5761191c611889565b8160405283815286602085880101111561193557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561196757600080fd5b813567ffffffffffffffff81111561197e57600080fd5b61198a848285016118c8565b949350505050565b6000602082840312156119a457600080fd5b5035919050565b60208152600061188260208301846117d9565b60008060008385036101008112156119d557600080fd5b843567ffffffffffffffff808211156119ed57600080fd5b818701915087601f830112611a0157600080fd5b813581811115611a1057600080fd5b886020828501011115611a2257600080fd5b60209290920195509093505060e0601f1982011215611a4057600080fd5b50611a4961189f565b6020850135815260408501356020820152606085013560408201526080850135606082015260a0850135608082015260c085013560a082015260e085013560c0820152809150509250925092565b600080600060608486031215611aac57600080fd5b833567ffffffffffffffff80821115611ac457600080fd5b611ad0878388016118c8565b94506020860135915080821115611ae657600080fd5b50611af3868287016118c8565b925050611b0260408501611766565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b8183823760009101908152919050565b60008351611b438184602088016117a9565b835190830190611b578183602088016117a9565b01949350505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220ea99273947e482065cef1a59d9455c28b66a1fb4209e1a3f24a5339cf911050a64736f6c634300080d0033";

type RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registry__factory extends ContractFactory {
  constructor(...args: RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Registry> {
    return super.deploy(overrides || {}) as Promise<Registry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  override connect(signer: Signer): Registry__factory {
    return super.connect(signer) as Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryInterface {
    return new utils.Interface(_abi) as RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}
