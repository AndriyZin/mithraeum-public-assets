/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Workers,
  WorkersInterface,
} from "../../../../contracts/assets/units/Workers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "worldAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "AMM_ASSET_TYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BUILDING_ASSET_TYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SETTLEMENT_ASSET_TYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "systemBurnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "systemTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "contract IWorld",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ed038038062001ed0833981016040819052620000349162000388565b60405180604001604052806007815260200166576f726b65727360c81b8152506040518060400160405280600381526020016257524b60e81b815250816003908051906020019062000088929190620002e2565b5080516200009e906004906020840190620002e2565b5050506000620000b560016200012860201b60201c565b90508015620000ce576005805461ff0019166101001790555b620000d9826200023c565b801562000120576005805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050620003f6565b600554600090610100900460ff1615620001c3578160ff1660011480156200016357506200016130620002d360201b620008011760201c565b155b620001bb5760405162461bcd60e51b815260206004820152602e602482015260008051602062001eb083398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60055460ff808416911610620002225760405162461bcd60e51b815260206004820152602e602482015260008051602062001eb083398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620001b2565b506005805460ff191660ff92909216919091179055600190565b600554610100900460ff16620002a95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620001b2565b600580546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6001600160a01b03163b151590565b828054620002f090620003ba565b90600052602060002090601f0160209004810192826200031457600085556200035f565b82601f106200032f57805160ff19168380011785556200035f565b828001600101855582156200035f579182015b828111156200035f57825182559160200191906001019062000342565b506200036d92915062000371565b5090565b5b808211156200036d576000815560010162000372565b6000602082840312156200039b57600080fd5b81516001600160a01b0381168114620003b357600080fd5b9392505050565b600181811c90821680620003cf57607f821691505b602082108103620003f057634e487b7160e01b600052602260045260246000fd5b50919050565b611aaa80620004066000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063d67e019711610071578063d67e0197146102b1578063dd62ed3e146102f3578063eb50dd881461032c578063f3ef0d5914610375578063fbd6948f1461038857600080fd5b806379cc67901461023b57806395d89b411461024e578063a457c2d714610256578063a9059cbb14610269578063b1bc25b01461027c57600080fd5b8063313ce567116100f4578063313ce567146101c857806339509351146101d757806340c10f19146101ea57806342966c68146101ff57806370a082311461021257600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd1461018457806330b67baa14610197575b600080fd5b61013961039b565b6040516101469190611852565b60405180910390f35b61016261015d3660046118bc565b61042d565b6040519015158152602001610146565b6002545b604051908152602001610146565b6101626101923660046118e8565b610445565b6005546101b0906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610146565b60405160128152602001610146565b6101626101e53660046118bc565b610469565b6101fd6101f83660046118bc565b6104a8565b005b6101fd61020d366004611929565b610588565b610176610220366004611942565b6001600160a01b031660009081526020819052604090205490565b6101fd6102493660046118bc565b610594565b61013961059e565b6101626102643660046118bc565b6105ad565b6101626102773660046118bc565b61063f565b6040805180820190915260088152676275696c64696e6760c01b602090910152610176600080516020611a5583398151915281565b604080518082019091526003815262616d6d60e81b6020909101526101767f611f084f1e6aab72d7e737eecd4acc2aa337eb64c00c69fb7b7fc8bd22dc5dae81565b610176610301366004611966565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600a8152691cd95d1d1b195b595b9d60b21b6020909101526101767f6522b1ac0c0c078f1fcc696b9cf72c59bb3624b7d2a9d82059b2f3832fd9973d81565b6101fd6103833660046118bc565b61064d565b6101fd6103963660046118e8565b610724565b6060600380546103aa9061199f565b80601f01602080910402602001604051908101604052809291908181526020018280546103d69061199f565b80156104235780601f106103f857610100808354040283529160200191610423565b820191906000526020600020905b81548152906001019060200180831161040657829003601f168201915b5050505050905090565b60003361043b818585610810565b5060019392505050565b600033610453858285610934565b61045e8585856109c6565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061043b90829086906104a39087906119ef565b610810565b6005546201000090046001600160a01b031633148061053857506005546040516371776fe760e11b81523360048201526000916201000090046001600160a01b03169063e2eedfce90602401602060405180830381865afa158015610511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105359190611a07565b14155b61057a5760405162461bcd60e51b815260206004820152600e60248201526d1bdb9b1e55dbdc9b19105cdcd95d60921b60448201526064015b60405180910390fd5b6105848282610ba5565b5050565b61059181610c98565b50565b6105848282610ca2565b6060600480546103aa9061199f565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156106325760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610571565b61045e8286868403610810565b60003361043b8185856109c6565b6005546201000090046001600160a01b03163314806106dd57506005546040516371776fe760e11b81523360048201526000916201000090046001600160a01b03169063e2eedfce90602401602060405180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611a07565b14155b61071a5760405162461bcd60e51b815260206004820152600e60248201526d1bdb9b1e55dbdc9b19105cdcd95d60921b6044820152606401610571565b6105848282610cad565b6005546201000090046001600160a01b03163314806107b457506005546040516371776fe760e11b81523360048201526000916201000090046001600160a01b03169063e2eedfce90602401602060405180830381865afa15801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190611a07565b14155b6107f15760405162461bcd60e51b815260206004820152600e60248201526d1bdb9b1e55dbdc9b19105cdcd95d60921b6044820152606401610571565b6107fc8383836109c6565b505050565b6001600160a01b03163b151590565b6001600160a01b0383166108725760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610571565b6001600160a01b0382166108d35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610571565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146109c057818110156109b35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610571565b6109c08484848403610810565b50505050565b6001600160a01b038316610a2a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610571565b6001600160a01b038216610a8c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610571565b610a97838383610e0e565b6001600160a01b03831660009081526020819052604090205481811015610b0f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610571565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b469084906119ef565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9291815260200190565b60405180910390a36109c08484846115f2565b6001600160a01b038216610bfb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610571565b610c0760008383610e0e565b8060026000828254610c1991906119ef565b90915550506001600160a01b03821660009081526020819052604081208054839290610c469084906119ef565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610584600083836115f2565b6105913382610cad565b61071a823383610934565b6001600160a01b038216610d0d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610571565b610d1982600083610e0e565b6001600160a01b03821660009081526020819052604090205481811015610d8d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610571565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610dbc908490611a20565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36107fc836000846115f2565b6040805180820182526003815262616d6d60e81b60209091015260055490516371776fe760e11b81526001600160a01b0385811660048301526000927f611f084f1e6aab72d7e737eecd4acc2aa337eb64c00c69fb7b7fc8bd22dc5dae92620100009091049091169063e2eedfce90602401602060405180830381865afa158015610e9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec19190611a07565b604080518082018252600a8152691cd95d1d1b195b595b9d60b21b60209091015260055490516371776fe760e11b81526001600160a01b0388811660048301529390921493506000927f6522b1ac0c0c078f1fcc696b9cf72c59bb3624b7d2a9d82059b2f3832fd9973d9262010000909204169063e2eedfce90602401602060405180830381865afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f9190611a07565b60408051808201825260088152676275696c64696e6760c01b60209091015260055490516371776fe760e11b81526001600160a01b038981166004830152939092149350600092600080516020611a558339815191529262010000909204169063e2eedfce90602401602060405180830381865afa158015611005573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110299190611a07565b1490506001600160a01b038616158061103f5750825b806110475750815b8061104f5750805b61108a5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c69642066726f6d60a01b6044820152606401610571565b6040805180820182526003815262616d6d60e81b60209091015260055490516371776fe760e11b81526001600160a01b0387811660048301526000927f611f084f1e6aab72d7e737eecd4acc2aa337eb64c00c69fb7b7fc8bd22dc5dae92620100009091049091169063e2eedfce90602401602060405180830381865afa158015611119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113d9190611a07565b604080518082018252600a8152691cd95d1d1b195b595b9d60b21b60209091015260055490516371776fe760e11b81526001600160a01b038a811660048301529390921493506000927f6522b1ac0c0c078f1fcc696b9cf72c59bb3624b7d2a9d82059b2f3832fd9973d9262010000909204169063e2eedfce90602401602060405180830381865afa1580156111d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fb9190611a07565b60408051808201825260088152676275696c64696e6760c01b60209091015260055490516371776fe760e11b81526001600160a01b038b81166004830152939092149350600092600080516020611a558339815191529262010000909204169063e2eedfce90602401602060405180830381865afa158015611281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a59190611a07565b1490506001600160a01b03881615806112bb5750825b806112c35750815b806112cb5750805b6113045760405162461bcd60e51b815260206004820152600a602482015269696e76616c696420746f60b01b6044820152606401610571565b6001600160a01b03881661131d57505050505050505050565b6001600160a01b0389161580156113315750825b1561139457876001600160a01b0316637c3257776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561137157600080fd5b505af1158015611385573d6000803e3d6000fd5b50505050505050505050505050565b6001600160a01b0389161580156113a85750815b156113b857505050505050505050565b8580156113c25750815b1561140257886001600160a01b0316637c3257776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561137157600080fd5b84801561140c5750805b80156114315750886001600160a01b0316611426896117e8565b6001600160a01b0316145b1561147157876001600160a01b0316637c3257776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561137157600080fd5b83801561147b5750815b80156114a05750876001600160a01b03166114958a6117e8565b6001600160a01b0316145b156114e057886001600160a01b0316637c3257776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561137157600080fd5b8380156114ea5750805b801561151757506114fa886117e8565b6001600160a01b031661150c8a6117e8565b6001600160a01b0316145b156115aa57886001600160a01b0316637c3257776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561155757600080fd5b505af115801561156b573d6000803e3d6000fd5b50505050876001600160a01b0316637c3257776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561137157600080fd5b60405162461bcd60e51b815260206004820152601860248201527f576f726b6572207472616e736665722064697361626c656400000000000000006044820152606401610571565b60408051808201825260088152676275696c64696e6760c01b60209091015260055490516371776fe760e11b81526001600160a01b038581166004830152600080516020611a5583398151915292620100009004169063e2eedfce90602401602060405180830381865afa15801561166e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116929190611a07565b036116eb57826001600160a01b031663feef33036040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156116d257600080fd5b505af11580156116e6573d6000803e3d6000fd5b505050505b60408051808201825260088152676275696c64696e6760c01b60209091015260055490516371776fe760e11b81526001600160a01b038481166004830152600080516020611a5583398151915292620100009004169063e2eedfce90602401602060405180830381865afa158015611767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178b9190611a07565b036107fc57816001600160a01b031663feef33036040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b50505050505050565b6000816001600160a01b031663fe7f15ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184c9190611a37565b92915050565b600060208083528351808285015260005b8181101561187f57858101830151858201604001528201611863565b81811115611891576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461059157600080fd5b600080604083850312156118cf57600080fd5b82356118da816118a7565b946020939093013593505050565b6000806000606084860312156118fd57600080fd5b8335611908816118a7565b92506020840135611918816118a7565b929592945050506040919091013590565b60006020828403121561193b57600080fd5b5035919050565b60006020828403121561195457600080fd5b813561195f816118a7565b9392505050565b6000806040838503121561197957600080fd5b8235611984816118a7565b91506020830135611994816118a7565b809150509250929050565b600181811c908216806119b357607f821691505b6020821081036119d357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a0257611a026119d9565b500190565b600060208284031215611a1957600080fd5b5051919050565b600082821015611a3257611a326119d9565b500390565b600060208284031215611a4957600080fd5b815161195f816118a756fe010b6fd4eff8a0ca8c7925f2d29e6173e90462d56ae99e39fa817c79f4028518a2646970667358221220e4327102a1b90bc38b7dba77bdd92cfd29643524fc4f2c5741756cd989acc68c64736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type WorkersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Workers__factory extends ContractFactory {
  constructor(...args: WorkersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    worldAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Workers> {
    return super.deploy(worldAddress, overrides || {}) as Promise<Workers>;
  }
  override getDeployTransaction(
    worldAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(worldAddress, overrides || {});
  }
  override attach(address: string): Workers {
    return super.attach(address) as Workers;
  }
  override connect(signer: Signer): Workers__factory {
    return super.connect(signer) as Workers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkersInterface {
    return new utils.Interface(_abi) as WorkersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Workers {
    return new Contract(address, _abi, signerOrProvider) as Workers;
  }
}
