/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Int,
  ERC20IntInterface,
} from "../../../contracts/token/ERC20Int";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "realBalanceOf",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506005805460ff191660121790556109c28061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a457c2d71161005b578063a457c2d7146101af578063a9059cbb146101c2578063dd62ed3e146101d557600080fd5b806370a082311461016b57806395d89b411461017e57806399a03c701461018657600080fd5b806323b872dd116100b257806323b872dd14610130578063313ce56714610143578063395093511461015857600080fd5b806306fdde03146100d9578063095ea7b3146100f757806318160ddd1461011a575b600080fd5b6100e161020e565b6040516100ee9190610768565b60405180910390f35b61010a6101053660046107d9565b6102a0565b60405190151581526020016100ee565b6101226102b6565b6040519081526020016100ee565b61010a61013e366004610803565b6102cf565b60055460405160ff90911681526020016100ee565b61010a6101663660046107d9565b610320565b61012261017936600461083f565b610356565b6100e161039a565b61012261019436600461083f565b6001600160a01b031660009081526020819052604090205490565b61010a6101bd3660046107d9565b6103a9565b61010a6101d03660046107d9565b6103df565b6101226101e336600461085a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461021d9061088d565b80601f01602080910402602001604051908101604052809291908181526020018280546102499061088d565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050905090565b60006102ad3384846103ec565b50600192915050565b60008060025412156102c85750600090565b5060025490565b60006102dc848484610515565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103169186916103119086610749565b6103ec565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ad918590610311908661075c565b6001600160a01b03811660009081526020819052604081205481131561037e57506000919050565b506001600160a01b031660009081526020819052604090205490565b60606004805461021d9061088d565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ad9185906103119086610749565b60006102ad338484610515565b6001600160a01b0383166104535760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166104b45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105795760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044a565b6001600160a01b0382166105db5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044a565b6001600160a01b0383166000908152602081905260409020548113156106435760405162461bcd60e51b815260206004820152601a60248201527f6e6f7420656e6f7567682062616c616e636520746f2073656e64000000000000604482015260640161044a565b6001600160a01b038083166000908152602081905260408082205492861682529020546106719083906108dd565b6001600160a01b0380861660009081526020819052604080822093909355908516815220546106a190839061091c565b6001600160a01b03841660009081526020819052604090208190558113156106f65760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b604482015260640161044a565b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161073b91815260200190565b60405180910390a350505050565b6000610755828461095d565b9392505050565b60006107558284610974565b600060208083528351808285015260005b8181101561079557858101830151858201604001528201610779565b818111156107a7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107d457600080fd5b919050565b600080604083850312156107ec57600080fd5b6107f5836107bd565b946020939093013593505050565b60008060006060848603121561081857600080fd5b610821846107bd565b925061082f602085016107bd565b9150604084013590509250925092565b60006020828403121561085157600080fd5b610755826107bd565b6000806040838503121561086d57600080fd5b610876836107bd565b9150610884602084016107bd565b90509250929050565b600181811c908216806108a157607f821691505b6020821081036108c157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b8501841216156108fb576108fb6108c7565b6001600160ff1b0384018313811615610916576109166108c7565b50500390565b600080821280156001600160ff1b038490038513161561093e5761093e6108c7565b600160ff1b8390038412811615610957576109576108c7565b50500190565b60008282101561096f5761096f6108c7565b500390565b60008219821115610987576109876108c7565b50019056fea26469706673582212205be7125b39da234c9c58e227b359ed6daf04ed931a15d1bc7ca858a8c965462b64736f6c634300080d0033";

type ERC20IntConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20IntConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Int__factory extends ContractFactory {
  constructor(...args: ERC20IntConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Int> {
    return super.deploy(overrides || {}) as Promise<ERC20Int>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Int {
    return super.attach(address) as ERC20Int;
  }
  override connect(signer: Signer): ERC20Int__factory {
    return super.connect(signer) as ERC20Int__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20IntInterface {
    return new utils.Interface(_abi) as ERC20IntInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Int {
    return new Contract(address, _abi, signerOrProvider) as ERC20Int;
  }
}
