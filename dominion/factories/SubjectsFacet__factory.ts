/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SubjectsFacet, SubjectsFacetInterface } from "../SubjectsFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "NewContent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "settlementAddress",
        type: "address",
      },
    ],
    name: "SubjectAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "settlementAddress",
        type: "address",
      },
    ],
    name: "SubjectRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "content",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowedExternalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCallbackSelector",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContent",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequiredSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    name: "setContent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_canRemove",
        type: "bool",
      },
    ],
    name: "subjectsFacet_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settlementAddress",
        type: "address",
      },
    ],
    name: "subjectsFacet_add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settlementAddress",
        type: "address",
      },
    ],
    name: "subjectsFacet_remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subjectsFacet_getSubjectsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "subjectsFacet_getSubjectsData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "settlementAddress",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "joinTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "exitTime",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isSettlement",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSigned",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct SubjectsFacetBasic.CombinedSubject[]",
        name: "signedSettlements",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "subjectsFacet_getSubjectDataByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "settlementAddress",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "joinTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "exitTime",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isSettlement",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSigned",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct SubjectsFacetBasic.CombinedSubject",
        name: "signedSettlement",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class SubjectsFacet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SubjectsFacet> {
    return super.deploy(overrides || {}) as Promise<SubjectsFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SubjectsFacet {
    return super.attach(address) as SubjectsFacet;
  }
  connect(signer: Signer): SubjectsFacet__factory {
    return super.connect(signer) as SubjectsFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubjectsFacetInterface {
    return new utils.Interface(_abi) as SubjectsFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubjectsFacet {
    return new Contract(address, _abi, signerOrProvider) as SubjectsFacet;
  }
}
