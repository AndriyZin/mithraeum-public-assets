/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IManagerFacet, IManagerFacetInterface } from "../IManagerFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updateDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_activationRange",
        type: "uint256",
      },
    ],
    name: "managerFacet_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_policyAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_inits",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "managerFacet_addPolicies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "managerFacet_executePolicyRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_policyAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_inits",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "managerFacet_removePolicies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_policyAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_inits",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "managerFacet_replacePolicies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managerFacet_getData",
    outputs: [
      {
        internalType: "uint256",
        name: "updateDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "activationRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerFacet_getPolicyRequestsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IManagerFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IManagerFacetInterface {
    return new utils.Interface(_abi) as IManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IManagerFacet {
    return new Contract(address, _abi, signerOrProvider) as IManagerFacet;
  }
}
