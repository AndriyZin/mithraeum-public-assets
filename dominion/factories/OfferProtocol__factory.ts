/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OfferProtocol, OfferProtocolInterface } from "../OfferProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_userProxyFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "NewContent",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllowedExternalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCallbackSelector",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContent",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequiredSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "uses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isCreator",
                type: "bool",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct OfferProtocol.MetaTransaction[]",
            name: "metaTransactions",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "reciever",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expireTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfUses",
            type: "uint256",
          },
        ],
        internalType: "struct OfferProtocol.Offer",
        name: "_offer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct OfferProtocol.Signature",
        name: "_signature",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "offset",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "replace",
                type: "bytes32",
              },
            ],
            internalType: "struct OfferProtocol.Placeholder[]",
            name: "placeholders",
            type: "tuple[]",
          },
        ],
        internalType: "struct OfferProtocol.PlaceholderTransactions[]",
        name: "_placeholderTransactions",
        type: "tuple[]",
      },
    ],
    name: "executeOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getPlaceholderById",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isCreator",
                type: "bool",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct OfferProtocol.MetaTransaction[]",
            name: "metaTransactions",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "reciever",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expireTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfUses",
            type: "uint256",
          },
        ],
        internalType: "struct OfferProtocol.Offer",
        name: "_offer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct OfferProtocol.Signature",
        name: "_signature",
        type: "tuple",
      },
    ],
    name: "checkSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "isCreator",
                type: "bool",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct OfferProtocol.MetaTransaction[]",
            name: "metaTransactions",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "reciever",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expireTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfUses",
            type: "uint256",
          },
        ],
        internalType: "struct OfferProtocol.Offer",
        name: "_offer",
        type: "tuple",
      },
    ],
    name: "getOfferHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161113438038061113483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6110a3806100916000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806359016c791161006657806359016c79146101165780637a86d5381461012b578063ae00cee61461013e578063bdc9d28114610151578063fd896f9d146100a35761009e565b806301e19399146100a35780631e7d9e84146100a35780633739890d146100c15780634b7723e6146100e15780635425df5914610101575b600080fd5b6100ab610166565b6040516100b89190610bbb565b60405180910390f35b6100d46100cf366004610a92565b61016b565b6040516100b89190610c14565b6100f46100ef3660046109a6565b61019b565b6040516100b89190610c09565b6101096102d3565b6040516100b89190610c3b565b61011e6102d8565b6040516100b89190610c50565b6100d461013936600461098e565b6102f6565b6100d461014c36600461098e565b610308565b61016461015f3660046109f3565b610320565b005b606090565b60008160405160200161017e9190610d81565b604051602081830303815290604052805190602001209050919050565b6000806101ae604085016020860161094f565b6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e657600080fd5b505afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610972565b90506001600160a01b03811660016102386100cf87611043565b6040516020016102489190610b46565b60408051601f1981840301815291905280516020918201209061026d90870187610acd565b86602001358760400135604051600081526020016040526040516102949493929190610c1d565b6020604051602081039080840390855afa1580156102b6573d6000803e3d6000fd5b505050602060405103516001600160a01b03161491505092915050565b600090565b604080518082019091526004815263544f444f60e01b602082015290565b60016020526000908152604090205481565b60008160405160200161017e9190610e5d565b919050565b61032a848461019b565b61034f5760405162461bcd60e51b815260040161034690610d4a565b60405180910390fd5b836060013542106103725760405162461bcd60e51b815260040161034690610cdf565b60006103806100cf86611043565b6000818152600160205260409020549091506080860135116103b45760405162461bcd60e51b815260040161034690610d06565b60007399999999999999999999999999999999999999996103db606088016040890161094f565b6001600160a01b031614156104715760005460405163b4e76d1960e01b81526001600160a01b039091169063b4e76d199061041a903390600401610b77565b60206040518083038186803b15801561043257600080fd5b505afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190610972565b9050610484565b610481606087016040880161094f565b90505b806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104bd57600080fd5b505afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f59190610972565b6001600160a01b0316336001600160a01b0316146105255760405162461bcd60e51b815260040161034690610c63565b61055b610538604088016020890161094f565b826105438980610e8e565b61054c91610f1e565b6105568789610f2b565b61057a565b5060009081526001602081905260409091208054909101905550505050565b6000805b83518110156106b25783818151811061059357fe5b602002602001015160000151156105ac578591506105b0565b8491505b6105e48382815181106105bf57fe5b60200260200101518583815181106105d357fe5b6020026020010151606001516106ba565b8482815181106105f057fe5b602002602001015160600181905250816001600160a01b031663f9aea6e285838151811061061a57fe5b60200260200101516020015186848151811061063257fe5b60200260200101516040015187858151811061064a57fe5b6020026020010151606001516040518463ffffffff1660e01b815260040161067493929190610b8b565b600060405180830381600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b50506001909201915061057e9050565b505050505050565b606060005b835151811015610731576000846000015182815181106106db57fe5b60209081029190910181015180518183015187820190930151919350909161070285610308565b83146107205760405162461bcd60e51b815260040161034690610ca8565b9086016020015250506001016106bf565b509092915050565b600061074c61074784610f00565b610edc565b83815290506020808201908360005b868110156108045781358601608080828b03121561077857600080fd5b604080519182019167ffffffffffffffff808411828510171561079757fe5b92825283359283151584146107ab57600080fd5b8382526107b988860161080f565b88830152828501358383015260609350838501359250808311156107dc57600080fd5b506107e98c83860161081a565b9281019290925250855250928201929082019060010161075b565b505050509392505050565b803561031b81611055565b600082601f83011261082a578081fd5b813567ffffffffffffffff81111561083e57fe5b610851601f8201601f1916602001610edc565b818152846020838601011115610865578283fd5b816020850160208301379081016020019190915292915050565b600060a08284031215610890578081fd5b50919050565b600060a082840312156108a7578081fd5b60405160a0810167ffffffffffffffff82821081831117156108c557fe5b8160405282935084359150808211156108dd57600080fd5b508301601f810185136108ef57600080fd5b6108fe85823560208401610739565b82525061090d6020840161080f565b602082015261091e6040840161080f565b604082015260608301356060820152608083013560808201525092915050565b600060608284031215610890578081fd5b600060208284031215610960578081fd5b813561096b81611055565b9392505050565b600060208284031215610983578081fd5b815161096b81611055565b60006020828403121561099f578081fd5b5035919050565b600080608083850312156109b8578081fd5b823567ffffffffffffffff8111156109ce578182fd5b6109da8582860161087f565b9250506109ea846020850161093e565b90509250929050565b60008060008060a08587031215610a08578182fd5b843567ffffffffffffffff80821115610a1f578384fd5b610a2b8883890161087f565b9550610a3a886020890161093e565b94506080870135915080821115610a4f578384fd5b818701915087601f830112610a62578384fd5b813581811115610a70578485fd5b8860208083028501011115610a83578485fd5b95989497505060200194505050565b600060208284031215610aa3578081fd5b813567ffffffffffffffff811115610ab9578182fd5b610ac584828501610896565b949350505050565b600060208284031215610ade578081fd5b813560ff8116811461096b578182fd5b6001600160a01b03169052565b60008151808452815b81811015610b2057602081850181015186830182015201610b04565b81811115610b315782602083870101525b50601f01601f19169290920160200192915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6001600160a01b0391909116815260200190565b600060018060a01b038516825283602083015260606040830152610bb26060830184610afb565b95945050505050565b6020808252825182820181905260009190848201906040850190845b81811015610bfd5783516001600160e01b03191683529284019291840191600101610bd7565b50909695505050505050565b901515815260200190565b90815260200190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160e01b031991909116815260200190565b60006020825261096b6020830184610afb565b60208082526025908201527f6d73672e73656e646572206e6f7420612072656365697665722050726f78792060408201526427bbb732b960d91b606082015260800190565b6020808252601d908201527f494e56414c49445f504c414345484f4c4445525f535045434946494544000000604082015260600190565b6020808252600d908201526c13d191915497d1561412549151609a1b604082015260600190565b60208082526024908201527f4d4158494d554d5f4f464645525f4e554d4245525f4f465f555345535f52454160408201526310d2115160e21b606082015260800190565b60208082526017908201527f494e56414c49445f4f464645525f5349474e4154555245000000000000000000604082015260600190565b6000602080835260c08301845160a08386015281815180845260e08701915060e085820288010193508483019250855b81811015610e145787850360df190183528351805115158652868101516001600160a01b03168787015260408082015190870152606090810151608091870182905290610e0081880183610afb565b965050509285019291850191600101610db1565b505050509084015190610e2a6040850183610aee565b60408501519150610e3e6060850183610aee565b60608501516080850152608085015160a0850152809250505092915050565b9081526040602082018190526010908201526f27b33332b9283630b1b2b437b63232b960811b606082015260800190565b6000808335601e19843603018112610ea4578283fd5b83018035915067ffffffffffffffff821115610ebe578283fd5b6020908101925081023603821315610ed557600080fd5b9250929050565b60405181810167ffffffffffffffff81118282101715610ef857fe5b604052919050565b600067ffffffffffffffff821115610f1457fe5b5060209081020190565b600061096b368484610739565b6000610f3961074784610f00565b8381526020808201919084845b878110156110375781358701838136031215610f60578687fd5b6040805185810167ffffffffffffffff8282108183111715610f7e57fe5b90835283359080821115610f90578a8bfd5b9381019336601f860112610fa2578a8bfd5b84359150610fb261074783610f00565b82815288810190868a013687860289018c011115610fce578d8efd5b8d97505b8488101561101d57868136031215610fe8578d8efd5b86518781018181108682111715610ffb57fe5b8852813581528b8201358c820152835260019790970196918a01918601610fd2565b508452505050875250509382019390820190600101610f46565b50919695505050505050565b600061104f3683610896565b92915050565b6001600160a01b038116811461106a57600080fd5b5056fea2646970667358221220b8043d81b2e474db18b25bf3536457aa621979917fdfdd78aac702523207638864736f6c63430007060033";

export class OfferProtocol__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _userProxyFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OfferProtocol> {
    return super.deploy(
      _userProxyFactoryAddress,
      overrides || {}
    ) as Promise<OfferProtocol>;
  }
  getDeployTransaction(
    _userProxyFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _userProxyFactoryAddress,
      overrides || {}
    );
  }
  attach(address: string): OfferProtocol {
    return super.attach(address) as OfferProtocol;
  }
  connect(signer: Signer): OfferProtocol__factory {
    return super.connect(signer) as OfferProtocol__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OfferProtocolInterface {
    return new utils.Interface(_abi) as OfferProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OfferProtocol {
    return new Contract(address, _abi, signerOrProvider) as OfferProtocol;
  }
}
