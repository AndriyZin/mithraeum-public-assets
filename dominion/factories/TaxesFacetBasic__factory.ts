/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  TaxesFacetBasic,
  TaxesFacetBasicInterface,
} from "../TaxesFacetBasic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "NewContent",
    type: "event",
  },
  {
    inputs: [],
    name: "content",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_taxReceiver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_punishCountdown",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_punishPercent",
        type: "uint256",
      },
    ],
    name: "taxesFacet_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settlementAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_building",
        type: "string",
      },
    ],
    name: "taxesFacet_claimTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settlementAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_building",
        type: "string",
      },
    ],
    name: "taxesFacet_canPunish",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settlementAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_building",
        type: "string",
      },
    ],
    name: "taxesFacet_punish",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxesFacet_data",
    outputs: [
      {
        internalType: "uint256",
        name: "_punishPercent",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_taxReceiver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_punishCountdown",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_buildings",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "taxesFacet_newLayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_layoutIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_settlementAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "taxesFacet_applyLayoutTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxesFacet_getTaxLayoutsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "taxesFacet_getLayouts",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "buildings",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct TaxLayout[]",
        name: "res",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_layoutIndex",
        type: "uint256",
      },
    ],
    name: "taxesFacet_disableLayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settlementAddress",
        type: "address",
      },
    ],
    name: "taxesFacet_removeUserTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowedExternalFunctions",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCallbackSelector",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContent",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    name: "setContent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequiredSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "res",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class TaxesFacetBasic__factory {
  static readonly abi = _abi;
  static createInterface(): TaxesFacetBasicInterface {
    return new utils.Interface(_abi) as TaxesFacetBasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TaxesFacetBasic {
    return new Contract(address, _abi, signerOrProvider) as TaxesFacetBasic;
  }
}
