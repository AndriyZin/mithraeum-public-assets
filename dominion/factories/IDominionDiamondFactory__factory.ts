/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IDominionDiamondFactory,
  IDominionDiamondFactoryInterface,
} from "../IDominionDiamondFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_config",
        type: "string",
      },
    ],
    name: "newDiamond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContent",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newContent",
        type: "string",
      },
    ],
    name: "setContent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDominionDiamondFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IDominionDiamondFactoryInterface {
    return new utils.Interface(_abi) as IDominionDiamondFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDominionDiamondFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IDominionDiamondFactory;
  }
}
