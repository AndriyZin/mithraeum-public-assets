/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IInitiateFacet,
  IInitiateFacetInterface,
} from "../IInitiateFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_worldAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
    ],
    name: "initiateFacet_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_policyAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_inits",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_calldata",
        type: "bytes[]",
      },
    ],
    name: "initiateFacet_addPolicies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policyAddress",
        type: "address",
      },
    ],
    name: "initiateFacet_selfdestruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IInitiateFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IInitiateFacetInterface {
    return new utils.Interface(_abi) as IInitiateFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInitiateFacet {
    return new Contract(address, _abi, signerOrProvider) as IInitiateFacet;
  }
}
